{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"source/google0f8fac7da2b48ef8.html","path":"google0f8fac7da2b48ef8.html","modified":1,"renderable":0},{"_id":"source/images/alipay-reward-image.jpg","path":"images/alipay-reward-image.jpg","modified":1,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":0},{"_id":"source/images/avatar1.jpg","path":"images/avatar1.jpg","modified":1,"renderable":0},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":0},{"_id":"source/images/pasted-0.png","path":"images/pasted-0.png","modified":1,"renderable":0},{"_id":"source/images/pasted-1.png","path":"images/pasted-1.png","modified":1,"renderable":0},{"_id":"source/images/pasted-2.png","path":"images/pasted-2.png","modified":1,"renderable":0},{"_id":"source/images/pasted-3.png","path":"images/pasted-3.png","modified":1,"renderable":0},{"_id":"source/images/pasted-4.png","path":"images/pasted-4.png","modified":1,"renderable":0},{"_id":"source/images/wechat-qcode.jpg","path":"images/wechat-qcode.jpg","modified":1,"renderable":0},{"_id":"source/images/wechat-reward-image.jpg","path":"images/wechat-reward-image.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/LICENSE","path":"lib/Han/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/README.md","path":"lib/Han/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"322af0dbb9daab0e254a046cb2fc2bd67254f0bc","modified":1536364476618},{"_id":"source/README.md","hash":"a68f14fb4710f2db7af2b07614b918a2890a3b8d","modified":1536364476618},{"_id":"source/google0f8fac7da2b48ef8.html","hash":"6a50d857705ed4e87fb73758b00223f78d10b9f9","modified":1536364476426},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1536364484410},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1536364484410},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1536364484410},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1536364484418},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1536364484422},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1536364484422},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1536364484422},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1536364484426},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1536364484426},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1536364484426},{"_id":"themes/next/README.md","hash":"ec309ec5a764c31df3ca6be624cfec762ff97cea","modified":1536364484426},{"_id":"themes/next/_config.yml","hash":"688e166d34297e863a9d341f65a625f63908bead","modified":1536364484314},{"_id":"themes/next/bower.json","hash":"3f8f416899ab12c48a5cc936265d475fa99ce9fe","modified":1536364484426},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1536364484426},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1536364484618},{"_id":"themes/next/package.json","hash":"f27fff901d4e34f53cf98cb120d365a8b66c6fd3","modified":1536364484742},{"_id":"source/_posts/c-单例模式.md","hash":"e29d60e0cefb5e1abc5bea370ecfe8b272578b0d","modified":1536364476646},{"_id":"source/_posts/c-定义类型别名.md","hash":"e3ba1edff167fd68dd309ee2d110d5f6378f837a","modified":1536364476646},{"_id":"source/_posts/c-工厂模式.md","hash":"3c2c86712d37c7c408495264914c5c6c62224d94","modified":1536364476646},{"_id":"source/_posts/python-pip更改国内镜像.md","hash":"3e8ab9adc74ef6277724ef42be8b28a81160ec53","modified":1536364476646},{"_id":"source/_posts/python-为Python添加默认模块搜索路径.md","hash":"b9cfe362bf1a0367db5fe3c43c9444eb87176810","modified":1536364476642},{"_id":"source/_posts/python-让jupyter-notebook支持python3.md","hash":"225f8e150f72e2d25b388e34b740f770cf659544","modified":1536364476634},{"_id":"source/_posts/test.md","hash":"829b794762f5fb983c534a0de7f2520e0a5cac0f","modified":1536364476670},{"_id":"source/_posts/使用shadowsocks访问google-scholar.md","hash":"bba40dda515c6b2fe66174385f48c7f7bba3706d","modified":1536364476654},{"_id":"source/_posts/软件-Clion关联-高亮-cuda代码.md","hash":"af6896d4df5cdd4484fc4915c965c02300f1d20b","modified":1536364476646},{"_id":"source/_posts/运维-使用国内免费CDN加速GitHub-Pages.md","hash":"944dc50803328d4b3835f5ca8788e66c01833f9a","modified":1536364476646},{"_id":"source/about/index.md","hash":"3eca9f275bcccc6d2df82ccc1a246eb65ef9a5b1","modified":1536364476698},{"_id":"source/categories/index.md","hash":"abba087e63488edd3205641bd041a4a76b154939","modified":1536364476718},{"_id":"source/images/alipay-reward-image.jpg","hash":"1eb4bf57cee466a1ea3865c397a365f7b56d4158","modified":1536364476430},{"_id":"source/images/avatar.jpg","hash":"08753998729ef2cb9ce2b3eb3a1fa009d17ba585","modified":1536364476430},{"_id":"source/images/avatar1.jpg","hash":"e5122333f90be050fde3082283c88a30cfe93863","modified":1536364476510},{"_id":"source/images/favicon.ico","hash":"ada609c7d1737a3f56d84f8d7de41797c0fc22f2","modified":1536364476510},{"_id":"source/images/pasted-0.png","hash":"0f34c12b5b61e8a1eec7a91e15f101461653e750","modified":1536364476618},{"_id":"source/images/pasted-1.png","hash":"911bf9b39e6d43230b8978cea8b5c26f9863c01d","modified":1536364476594},{"_id":"source/images/pasted-2.png","hash":"ebda614a4b7f538fde6191232e7bce61a47d7a85","modified":1536364476602},{"_id":"source/images/pasted-3.png","hash":"f81b3a91f77a5c1a1894897ce924ca7f757f95f5","modified":1536364476606},{"_id":"source/images/pasted-4.png","hash":"b8d67423e1f70b120e002c29fd110abbb597ddb9","modified":1536364476610},{"_id":"source/images/wechat-qcode.jpg","hash":"28f2b19f0982c1c45abb3e7137b6ee7db7355f83","modified":1536364476574},{"_id":"source/images/wechat-reward-image.jpg","hash":"42e245e28b9205b72d7a1855bf0d6a78feae0009","modified":1536364476586},{"_id":"source/schedule/index.md","hash":"a75ca0ce8c1ebb68e69c67fee982a4e5fab3c71c","modified":1536364476726},{"_id":"source/tags/index.md","hash":"2e26dbd2f9620cc29966dedecf5c3becef00d081","modified":1536364476718},{"_id":"themes/next/.git/COMMIT_EDITMSG","hash":"e763ad1d6c9543c1a6ad319af0ea1ac000d70147","modified":1536364484330},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1536364484406},{"_id":"themes/next/.git/config","hash":"3aa58ad32c5b537b7b64d00c59cc2787e74a3fd2","modified":1536364484398},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1536364484338},{"_id":"themes/next/.git/index","hash":"5d008718fa800056e09cfc743351b39be51bfddf","modified":1536364484410},{"_id":"themes/next/.git/packed-refs","hash":"11d8239906c78200a9f78e36899cc262afadb151","modified":1536364484398},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1536364484410},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"f846118d7fc68c053df47b24e1f661241645373f","modified":1536364484410},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1536364484410},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1536364484414},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1536364484418},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1536364484418},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1536364484430},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1536364484430},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1536364484430},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1536364484430},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1536364484430},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"bbd5aa9a79cac0f630b666bc6db87025e08fb1ac","modified":1536364484470},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1536364484470},{"_id":"themes/next/docs/MATH.md","hash":"d047b8a3d9aa49b478a33e5a326195d460cb4589","modified":1536364484470},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1536364484470},{"_id":"themes/next/languages/ar.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484618},{"_id":"themes/next/languages/bg.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484618},{"_id":"themes/next/languages/bn.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484618},{"_id":"themes/next/languages/cs.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484618},{"_id":"themes/next/languages/da.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484618},{"_id":"themes/next/languages/de.yml","hash":"31022b4e7caa10ad7551919159fb37c820788398","modified":1536364484622},{"_id":"themes/next/languages/default.yml","hash":"9ee613ffbc4fd647884b927a7247c252292d376d","modified":1536364484622},{"_id":"themes/next/languages/el.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484622},{"_id":"themes/next/languages/en.yml","hash":"9ee613ffbc4fd647884b927a7247c252292d376d","modified":1536364484622},{"_id":"themes/next/languages/es.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484622},{"_id":"themes/next/languages/et.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484622},{"_id":"themes/next/languages/fa.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484622},{"_id":"themes/next/languages/fi.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484634},{"_id":"themes/next/languages/fr.yml","hash":"059d66eea84757a2c330e865262cbf5d22e384ca","modified":1536364484634},{"_id":"themes/next/languages/he.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484634},{"_id":"themes/next/languages/hi.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484634},{"_id":"themes/next/languages/hr.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484638},{"_id":"themes/next/languages/hu.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484642},{"_id":"themes/next/languages/id.yml","hash":"6aedba65605a6b63451767f6ac4359c7ca72b4b5","modified":1536364484642},{"_id":"themes/next/languages/it.yml","hash":"2f183ebc0e26c0ce899e57f1b98b0d1727f8ac06","modified":1536364484642},{"_id":"themes/next/languages/ja.yml","hash":"7ff7c14c97291e2e29ad1e10fa96bcab8fe35a18","modified":1536364484646},{"_id":"themes/next/languages/jv.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484646},{"_id":"themes/next/languages/ko.yml","hash":"e8f29cb1684262cc7de8807f70f22ce25b68ae4e","modified":1536364484646},{"_id":"themes/next/languages/lt.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484646},{"_id":"themes/next/languages/lv.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484646},{"_id":"themes/next/languages/ms.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484646},{"_id":"themes/next/languages/nl.yml","hash":"b9e752c19a2fa8b9b24ab382c903da3fcefb48df","modified":1536364484646},{"_id":"themes/next/languages/no.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484646},{"_id":"themes/next/languages/pa.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484650},{"_id":"themes/next/languages/pl.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484650},{"_id":"themes/next/languages/pt-BR.yml","hash":"08a9d21e2ed1c7871ad2e4c14f57cd5d21fecb20","modified":1536364484650},{"_id":"themes/next/languages/pt.yml","hash":"bc1e2b1857b3dbf15632950bd3c06971b9eb7b17","modified":1536364484650},{"_id":"themes/next/languages/ro.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484650},{"_id":"themes/next/languages/ru.yml","hash":"13af9d32b823628453ac732e888e95b80ba03c0a","modified":1536364484650},{"_id":"themes/next/languages/sl.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484650},{"_id":"themes/next/languages/sr.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484650},{"_id":"themes/next/languages/sv.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484650},{"_id":"themes/next/languages/th.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484654},{"_id":"themes/next/languages/tr.yml","hash":"e0310c719c86e425d97174ce3aa2902251577f15","modified":1536364484654},{"_id":"themes/next/languages/uk.yml","hash":"371331112a7ec4a61991cb12870ca85b7856b43d","modified":1536364484654},{"_id":"themes/next/languages/vi.yml","hash":"e32495a468c69e3b4f5f8c2774797a23c8aafa1c","modified":1536364484654},{"_id":"themes/next/languages/zh-CN.yml","hash":"4bc010df6ea139cb5fbb8d7e9dac27110a9eef89","modified":1536364484666},{"_id":"themes/next/languages/zh-HK.yml","hash":"40f3543ec83f15d4d6f5af1782a0424c0cd8a009","modified":1536364484666},{"_id":"themes/next/languages/zh-TW.yml","hash":"475359a40f23133d33da29f161239f180e208ace","modified":1536364484666},{"_id":"themes/next/layout/_layout.swig","hash":"60c6438f43e2832dfb8b085e765d050ae63ba844","modified":1536364484666},{"_id":"themes/next/layout/archive.swig","hash":"833a2213d31be45a12b8e4e5e609073978bd251b","modified":1536364484738},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1536364484738},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1536364484738},{"_id":"themes/next/layout/page.swig","hash":"3f9b2444f12251727ebbc28159f02e9e9489742e","modified":1536364484738},{"_id":"themes/next/layout/post.swig","hash":"8e2d079b46076996cc9343213d5bf7da8178d32d","modified":1536364484738},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1536364484738},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1536364484742},{"_id":"themes/next/scripts/helpers.js","hash":"3c3fb81f575a21dd3131757b36410773b7a9738d","modified":1536364484746},{"_id":"themes/next/scripts/merge-configs.js","hash":"ca9845dc76f5710b4c6fba5fe25ff0d2fcf0adaa","modified":1536364484746},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1536364484746},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1536364484930},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1536364484934},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1536364484934},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536364484818},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1536364484334},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1536364484334},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1536364484338},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1536364484334},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1536364484338},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1536364484334},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1536364484338},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1536364484334},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1536364484334},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1536364484334},{"_id":"themes/next/.git/logs/HEAD","hash":"c5553006bc6ee6ad6bef1c9ea90b989b066ec5b3","modified":1536364484406},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1536364484494},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1536364484522},{"_id":"themes/next/docs/ru/README.md","hash":"f12ccabe58dd6944106e71910a2b0914638dba95","modified":1536364484550},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1536364484550},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1536364484570},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1536364484570},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"44e4fb7ce2eca20dfa98cdd1700b50d6def4086f","modified":1536364484570},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1536364484570},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1536364484594},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"0bc0c3eb909f137c859f38c5c66dcb7c29f76ead","modified":1536364484614},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"1c7df019737656fdfd8d124c7c045a64ac8a2a8d","modified":1536364484618},{"_id":"themes/next/docs/zh-CN/README.md","hash":"f4717a926cda6179c89315226ceeb7bfc78fbef5","modified":1536364484618},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"c1ba919f70efe87a39e6217883e1625af0b2c23c","modified":1536364484618},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1536364484666},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1536364484666},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1536364484666},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1536364484670},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"464082e431ea5b06df782d5f312ee25be9e5f169","modified":1536364484670},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1536364484670},{"_id":"themes/next/layout/_macro/post.swig","hash":"75afb7f21c90cbf60caf2643d788a7491683e0b1","modified":1536364484670},{"_id":"themes/next/layout/_macro/reward.swig","hash":"aa620c582143f43ba1cb1a5e59240041a911185b","modified":1536364484670},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"355ddd5b8af696f7bffb183addd7e84c0a4e2123","modified":1536364484670},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"fea45ab314b9ea23edab25c2b8620f909d856b1d","modified":1536364484670},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1536364484674},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5df32b286a8265ba82a4ef5e1439ff34751545ad","modified":1536364484674},{"_id":"themes/next/layout/_partials/footer.swig","hash":"133de67bf3d19558fb3b39dcc561cd912e54222c","modified":1536364484674},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1536364484678},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1536364484678},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1536364484682},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1536364484682},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1536364484682},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1536364484686},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1536364484694},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1536364484698},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1536364484698},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1536364484702},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1536364484702},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1536364484702},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1536364484702},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1536364484706},{"_id":"themes/next/scripts/tags/button.js","hash":"5a61c2da25970a4981fbd65f4a57c5e85db4dcda","modified":1536364484746},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"db70a841e7c1708f95ca97b44413b526b267fa9b","modified":1536364484746},{"_id":"themes/next/scripts/tags/exturl.js","hash":"2b3a4dc15dea33972c0b6d46a1483dabbf06fb5b","modified":1536364484754},{"_id":"themes/next/scripts/tags/full-image.js","hash":"a98fc19a90924f2368e1982f8c449cbc09df8439","modified":1536364484754},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"1b97b1b5364945b8ab3e50813bef84273055234f","modified":1536364484754},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"b7600f6b868d8f4f7032126242d9738cd1e6ad71","modified":1536364484754},{"_id":"themes/next/scripts/tags/label.js","hash":"621004f2836040b12c4e8fef77e62cf22c561297","modified":1536364484754},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"460e5e1f305847dcd4bcab9da2038a85f0a1c273","modified":1536364484758},{"_id":"themes/next/scripts/tags/note.js","hash":"4975d4433e11161b2e9a5744b7287c2d667b3c76","modified":1536364484758},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1536364484758},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1536364484814},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1536364484818},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1536364484818},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1536364484818},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1536364484818},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1536364484818},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1536364484818},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1536364484822},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1536364484822},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1536364484822},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1536364484822},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1536364484822},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1536364484822},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1536364484822},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1536364484822},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1536364484834},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1536364484834},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1536364484834},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1536364484834},{"_id":"source/images/avatar.png","hash":"402dc924755f09549a5e4cf3301bde6415606624","modified":1536364476506},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536364484686},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536364484686},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536364484802},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536364484802},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536364484802},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536364484814},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536364484814},{"_id":"themes/next/.git/objects/08/1cb41edff09371fb0eb90e5fbe70ee63381deb","hash":"1a11d7830d681a798ff0a001aba527e87b3bc261","modified":1536364484386},{"_id":"themes/next/.git/objects/0f/f25fb9fe820c4d08b6d3f615b33addfbe2c9a7","hash":"65825ddf1402300262a5c88bd8236f33eaf25828","modified":1536364484378},{"_id":"themes/next/.git/objects/39/7a165153f598e0cab3f4e7e4d9a514ba71f788","hash":"7993a2c4df55c26f45d0aa1ae8cf999d8250adac","modified":1536364484386},{"_id":"themes/next/.git/objects/61/872d4aeacc7b583611eb6c889fdab67539b918","hash":"fd6ecb96cddcd8504980f396b1563d3f4c9fb7c9","modified":1536364484386},{"_id":"themes/next/.git/objects/b6/89356d2f55a23111fd1cc6477c41ca27437e0c","hash":"d63510b7a05899db2316f6d40fa805d464ac8a63","modified":1536364484378},{"_id":"themes/next/.git/objects/d9/1d9843560028376fb0e853140fe4d87ec4fd21","hash":"8a080ba6f3d787320536394b541d9c825bc36244","modified":1536364484394},{"_id":"themes/next/.git/objects/f5/9ac08ccc27bf64e001bb13b05ea732fa04999f","hash":"6799c996c06fd33c47c79d4285cc7b14c3955b95","modified":1536364484386},{"_id":"themes/next/.git/objects/fb/938f86f91227e25931a68d508432e977210c15","hash":"2db5dc39c8f7b42ef258e002dbf2ba342a15d2a8","modified":1536364484394},{"_id":"themes/next/.git/refs/heads/master","hash":"a39d48e4d4cd65ee5daca60d413ab8d7141d1220","modified":1536364484330},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1536364484670},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1536364484670},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1536364484674},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"cd7e3331a61939c820e0437bf5d815cb0a42fefb","modified":1536364484674},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"9f7aa33a620aea6ede1fb907b61fd071c018c525","modified":1536364484674},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"b5c9f191c55622d778a1f4fb14008f858b87e8f7","modified":1536364484674},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"e76745ff68fc017c250d749880ab67a68a9f2695","modified":1536364484674},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1536364484674},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1536364484678},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1536364484678},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1536364484678},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1536364484678},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1536364484682},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1536364484682},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1536364484682},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1536364484682},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1536364484682},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1536364484686},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1536364484686},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1536364484686},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1536364484690},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1536364484690},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1536364484690},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1536364484690},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"d86b30413aa9324d703f5813fd3c568a3afaa34d","modified":1536364484690},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig.backup","hash":"9d21bcadd0f1abe4b4d65bd611ef0c3063644354","modified":1536364484690},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1536364484690},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"94b26dfbcd1cf2eb87dd9752d58213338926af27","modified":1536364484690},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1536364484690},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1536364484694},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"cee047575ae324398025423696b760db64d04e6f","modified":1536364484694},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1536364484694},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1536364484694},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1536364484694},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1536364484694},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1536364484694},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"17a54796f6e03fc834880a58efca45c286e40e40","modified":1536364484694},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"40e3cacbd5fa5f2948d0179eff6dd88053e8648e","modified":1536364484698},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"6f340d122a9816ccdf4b45b662880a4b2d087671","modified":1536364484698},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"c0eb6123464d745ac5324ce6deac8ded601f432f","modified":1536364484698},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"42f62695029834d45934705c619035733762309e","modified":1536364484698},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"2fbee33a4ccd7c8217c73e85a9a1488170e05629","modified":1536364484694},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1536364484702},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1536364484702},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"011ae6303afacddabc4ddf570fe3dd227569cd4f","modified":1536364484702},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1536364484706},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1536364484718},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1536364484722},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1536364484730},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1536364484802},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1536364484802},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1536364484802},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"81ca13d6d0beff8b1a4b542a51e3b0fb68f08efd","modified":1536364484802},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"7a2706304465b9e673d5561b715e7c72a238437c","modified":1536364484814},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1536364484814},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"32392d213f5d05bc26b2dc452f2fc6fea9d44f6d","modified":1536364484814},{"_id":"themes/next/source/css/_variables/base.styl","hash":"cfb03ec629f13883509eac66e561e9dba562333f","modified":1536364484814},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1536364484834},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1536364484834},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"40de94fd18fcbd67a327d63b0d1e242a08aa5404","modified":1536364484842},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1536364484842},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1536364484846},{"_id":"themes/next/source/js/src/motion.js","hash":"50e57f8acb6924c6999cdcc664ddd3f0730d2061","modified":1536364484846},{"_id":"themes/next/source/js/src/post-details.js","hash":"d1333fb588d4521b4d1e9c69aef06e0ad1bf0b12","modified":1536364484846},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1536364484846},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1536364484846},{"_id":"themes/next/source/js/src/utils.js","hash":"4284c67ea1435de2acd523f6d48c0d073fd1ad03","modified":1536364484846},{"_id":"themes/next/source/lib/Han/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1536364484882},{"_id":"themes/next/source/lib/Han/README.md","hash":"572a02d6dfcb37f35eb47339862da6fddae00826","modified":1536364484882},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1536364484890},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1536364484890},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1536364484890},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1536364484890},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1536364484890},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1536364484926},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1536364484930},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1536364484930},{"_id":"themes/next/.git/objects/pack/pack-bf9775e2182f707143f984de26f4b984c15e056d.idx","hash":"7620df2c77cf88b7743db3c7632c927317505fef","modified":1536364484378},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1536364484914},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"c5553006bc6ee6ad6bef1c9ea90b989b066ec5b3","modified":1536364484406},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1536364484330},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1536364484706},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1536364484706},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1536364484758},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1536364484758},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1536364484758},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1536364484758},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1536364484762},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1536364484774},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1536364484786},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1536364484798},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1536364484802},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1536364484802},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1536364484802},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1536364484802},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1536364484802},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1536364484802},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"f362fbc791dafb378807cabbc58abf03e097af6d","modified":1536364484806},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1536364484806},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1536364484806},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1536364484806},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1536364484806},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1536364484806},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1536364484806},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1536364484806},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1536364484810},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1536364484810},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1536364484810},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1536364484810},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1536364484810},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1536364484810},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"ba1842dbeb97e46c6c4d2ae0e7a2ca6d610ada67","modified":1536364484810},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1536364484810},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1536364484810},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1536364484814},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1536364484814},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1536364484814},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1536364484846},{"_id":"themes/next/source/lib/Han/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1536364484878},{"_id":"themes/next/source/lib/Han/.git/config","hash":"60dc0c15e03f06673c4be0b31eb4844b8750ce74","modified":1536364484878},{"_id":"themes/next/source/lib/Han/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1536364484854},{"_id":"themes/next/source/lib/Han/.git/index","hash":"404ffcd59ed43aeb934495816547763532ab4a12","modified":1536364484878},{"_id":"themes/next/source/lib/Han/.git/packed-refs","hash":"a5c304809133acd28efb8f67ae02438b58b5167c","modified":1536364484878},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1536364484886},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1536364484886},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1536364484890},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1536364484890},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1536364484894},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1536364484894},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1536364484918},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1536364484918},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1536364484910},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1536364484914},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1536364484918},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1536364484886},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"b996bc93241a41220afe39ee029c16f393eb3391","modified":1536364484402},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1536364484762},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1536364484762},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1536364484766},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1536364484766},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1536364484766},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1536364484770},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1536364484770},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1536364484770},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1536364484770},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1536364484770},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1536364484770},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1536364484774},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1536364484774},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1536364484774},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1536364484774},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1536364484774},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1536364484774},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1536364484774},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1536364484774},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1536364484774},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1536364484774},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1536364484778},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"0b57ca04dc3998cf70bb90d777b0db05f3928b82","modified":1536364484778},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1536364484778},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1536364484778},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1536364484778},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1536364484778},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1536364484778},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1536364484778},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1536364484782},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1536364484782},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8bf095377d28881f63a30bd7db97526829103bf2","modified":1536364484782},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1536364484782},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1536364484782},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1536364484782},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1536364484782},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1536364484782},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1536364484782},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1536364484786},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1536364484786},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1536364484786},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1536364484786},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1536364484786},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1536364484786},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"5d15cc8bbefe44c77a9b9f96bf04a6033a4b35b8","modified":1536364484786},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1536364484790},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1536364484790},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1536364484790},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1536364484790},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1536364484790},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1536364484790},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1536364484790},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1536364484790},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1536364484794},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1536364484794},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1536364484794},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1536364484798},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1536364484798},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1536364484798},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1536364484798},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c06be422bc41fd35e5c7948cdea2c09961207f6","modified":1536364484798},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1536364484810},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1536364484810},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1536364484810},{"_id":"themes/next/source/lib/Han/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1536364484850},{"_id":"themes/next/source/lib/Han/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1536364484850},{"_id":"themes/next/source/lib/Han/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1536364484854},{"_id":"themes/next/source/lib/Han/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1536364484850},{"_id":"themes/next/source/lib/Han/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1536364484854},{"_id":"themes/next/source/lib/Han/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1536364484854},{"_id":"themes/next/source/lib/Han/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1536364484854},{"_id":"themes/next/source/lib/Han/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1536364484850},{"_id":"themes/next/source/lib/Han/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1536364484850},{"_id":"themes/next/source/lib/Han/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1536364484850},{"_id":"themes/next/source/lib/Han/.git/logs/HEAD","hash":"7b3f7e6204d4ad81e4e6a68ff96fd6972e8ea190","modified":1536364484878},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1536364484882},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1536364484882},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1536364484882},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1536364484882},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1536364484882},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1536364484894},{"_id":"themes/next/source/lib/Han/.git/objects/01/1e06c7aa90464f2b1d40aae05cf9d69e7667f1","hash":"e9888d4243b096c91da6cd30a348734b88c652e4","modified":1536364484866},{"_id":"themes/next/source/lib/Han/.git/objects/02/c49afbd642c373142ce96b321820b2e31136dc","hash":"1e84c7eb747dd99355ec99a190aca59f10f38a61","modified":1536364484866},{"_id":"themes/next/source/lib/Han/.git/objects/14/222c5cf0874b3d006fcab6244c9e34c13cae11","hash":"32841604a28018f255ed74be25a3fed374729561","modified":1536364484874},{"_id":"themes/next/source/lib/Han/.git/objects/1a/dff38de35c5dcd90b1c9abb363d60cedc677c3","hash":"e3bb99642f5f820b6e41c5a2dbeaa5a5e7629cf9","modified":1536364484858},{"_id":"themes/next/source/lib/Han/.git/objects/1b/2d9ec86c12358ba35f7db597cccb93c4977154","hash":"7e90faafec65ae60455922b819ad373460c708c4","modified":1536364484854},{"_id":"themes/next/source/lib/Han/.git/objects/1b/d905fca417b7dc6e1091fbf5dcb99a8e3f44a3","hash":"f904eb01291a0c87f34747183435918e4696a960","modified":1536364484854},{"_id":"themes/next/source/lib/Han/.git/objects/29/c753eafb74ec88615f947d25acb4659340747d","hash":"5d0cc15f306cc2c34a9107c6aeb3576b90343956","modified":1536364484866},{"_id":"themes/next/source/lib/Han/.git/objects/2c/e2f46ca183a46f1b06517b1a2a8f96bcaab1b8","hash":"e9a8ddf8b0af2f52063c05075df107b7aacc0d91","modified":1536364484862},{"_id":"themes/next/source/lib/Han/.git/objects/47/b5af07d4d3fd429c6f4b405ff9acd5f4ee7975","hash":"0e69266d563abb092c5b40035331345f771021c2","modified":1536364484874},{"_id":"themes/next/source/lib/Han/.git/objects/4b/5f7d0162b051571cc9d87ba674ef913a7c5a29","hash":"8738e2f3453a3192d07fb0267d9f9194b910bee7","modified":1536364484862},{"_id":"themes/next/source/lib/Han/.git/objects/57/3ad3f32f0689138c4d6f7007621e0cf2bf23ea","hash":"fdb2d9e977cbbd0b44059cf61d5baad92f9df016","modified":1536364484878},{"_id":"themes/next/source/lib/Han/.git/objects/5f/7d3c8d8a6340f1efccc4b3eac842788c1628ec","hash":"af2accb69f344e9cfc870ca7dbe8d25c9e103318","modified":1536364484854},{"_id":"themes/next/source/lib/Han/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1536364484862},{"_id":"themes/next/source/lib/Han/.git/objects/6c/cc84f8ea3543926a1a1e78b5c50a56c0dc8025","hash":"8b4b97a1e3e0089940bc797e8ee3d6eca9d09d28","modified":1536364484866},{"_id":"themes/next/source/lib/Han/.git/objects/72/c270d58afaf026bd65fea390e277b6d63aa22f","hash":"2ebc915da4f2146762025c321bbd54fca1e7b9eb","modified":1536364484874},{"_id":"themes/next/source/lib/Han/.git/objects/75/976c6dc20178b5d24b07ba76700a73205a9b52","hash":"532198fa938fafd2b53dd45193e65a7c8c0f8c84","modified":1536364484866},{"_id":"themes/next/source/lib/Han/.git/objects/77/8fba47fc8f68467fb45002edcd717a71a4ea18","hash":"896ae007894c3f537f1723674f06740489bbf73c","modified":1536364484870},{"_id":"themes/next/source/lib/Han/.git/objects/7d/713d14ed6c435cc41223736376f9e41f8001ed","hash":"fe9cd361e4ab229e32f8a0303b108a5386d09429","modified":1536364484862},{"_id":"themes/next/source/lib/Han/.git/objects/84/5b1bc2898c9924eff3e1b0bd92b6178b4908db","hash":"7c8453a9632d2e4b2720c4a7d50b289936699d1c","modified":1536364484866},{"_id":"themes/next/source/lib/Han/.git/objects/8a/7ee041ca7a999ccd5f35177f9f806232b93738","hash":"627b29c5fa02783ab8130433036db571143e564f","modified":1536364484862},{"_id":"themes/next/source/lib/Han/.git/objects/9b/afab6ef59ce585cbc456d03770e167d2a3c9e2","hash":"32c4243f56b9334f340559d9e7bb7140aadb5959","modified":1536364484866},{"_id":"themes/next/source/lib/Han/.git/objects/a3/8e5bd4193fa1f52aa27eb2a7f32cf103d20a57","hash":"d8897f2030f55a50c5dcea877dd5b0f9a3a977d5","modified":1536364484858},{"_id":"themes/next/source/lib/Han/.git/objects/a5/57ad3eeef222d2387e98f4418b0438655a2765","hash":"cdaa150ec84c29d84750ef44aa586a600f901d63","modified":1536364484870},{"_id":"themes/next/source/lib/Han/.git/objects/aa/9916f898bfa69c88a84d6f0e99a549c8831d07","hash":"74c546dc2710eba88138d6a12df1d3e05e03ae35","modified":1536364484878},{"_id":"themes/next/source/lib/Han/.git/objects/ad/cf15c7f3d6cb69da502326740997e4a0e3bae3","hash":"0d53088c3633db9d45f69b6c12fd3f2cd4d53062","modified":1536364484862},{"_id":"themes/next/source/lib/Han/.git/objects/af/46be34010c865593eec22d79552334f3fac3f1","hash":"5d8888376467232bd9a13f99c8c76a386a5505e5","modified":1536364484870},{"_id":"themes/next/source/lib/Han/.git/objects/b3/7c278058df61bbd959c9f775f80f3a24b49a16","hash":"3429c10084546b79746b6b0e9f3e4b29fa6443e4","modified":1536364484858},{"_id":"themes/next/source/lib/Han/.git/objects/c3/a4e2326f7650fde4756dadf7c67484cf14aa4b","hash":"4b0e77607c87ea06fe9b612b8ee7cd99f87be559","modified":1536364484862},{"_id":"themes/next/source/lib/Han/.git/objects/cb/cf355438829a21ee86cb3f116a68daab599b5d","hash":"163216cd6c2b363b3bbdf32da39142dbd4ca690b","modified":1536364484862},{"_id":"themes/next/source/lib/Han/.git/objects/d3/6ccff12388f072c23857d33c6abd1f57b3dc86","hash":"a8d4bddb3c913051763dc7d2d3cfc243ef181701","modified":1536364484854},{"_id":"themes/next/source/lib/Han/.git/objects/e1/f0b9c30d5426977a4685d63a0cef6fd6abdd89","hash":"103eeacd4a6750c0e7313b84a571373fa8369579","modified":1536364484858},{"_id":"themes/next/source/lib/Han/.git/objects/e2/d2e185fbd7d888a3658fe97dde4ba595290caf","hash":"4edae1bf781e76b61bdc43395a76574c0d20107b","modified":1536364484874},{"_id":"themes/next/source/lib/Han/.git/objects/e6/02654d32318f5c7135c521ee586f93235452a7","hash":"c6dc38516b0cefe68f0d466f43afffc9d31c2428","modified":1536364484874},{"_id":"themes/next/source/lib/Han/.git/objects/e7/237bfe33deeeec901fb5f0a60bac33cbb446d7","hash":"6589766fc012cfd184f634e3747d944efe405797","modified":1536364484870},{"_id":"themes/next/source/lib/Han/.git/objects/f0/a838932f748272263bc294b178b9a3297a1295","hash":"77694c0d730fa2582dc473d3d3ee782156f4cf74","modified":1536364484874},{"_id":"themes/next/source/lib/Han/.git/refs/heads/master","hash":"ee343043f53b3ea48b689ba9c558932a01928d24","modified":1536364484850},{"_id":"themes/next/source/lib/Han/.git/logs/refs/heads/master","hash":"7b3f7e6204d4ad81e4e6a68ff96fd6972e8ea190","modified":1536364484878},{"_id":"themes/next/source/lib/Han/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1536364484850},{"_id":"themes/next/source/lib/Han/.git/logs/refs/remotes/origin/HEAD","hash":"7b3f7e6204d4ad81e4e6a68ff96fd6972e8ea190","modified":1536364484878},{"_id":"themes/next/.git/objects/pack/pack-bf9775e2182f707143f984de26f4b984c15e056d.pack","hash":"5a74d41a61173e8df749900c11e027fb70513c84","modified":1536364484378},{"_id":"public/baidu_urls.txt","hash":"d761c3d8fe09dfb4c805f3da8c1cc78e79b57bd7","modified":1536364548603},{"_id":"public/atom.xml","hash":"6ec6cdc5040de2044f58b62cbffb17f6f88a24ae","modified":1536364548711},{"_id":"public/search.xml","hash":"3b3b04cccae17e18ee5b924322801a1d0e36c4fc","modified":1536364548715},{"_id":"public/sitemap.xml","hash":"ec707bfe9a7d59191181ffd942930c51613deab8","modified":1536364548719},{"_id":"public/about/index.html","hash":"db3cf48b02581737770e2e59f75386aa1079a7f6","modified":1536364548798},{"_id":"public/categories/index.html","hash":"aa38f625a5c04b37f8556b35dfad0c4aa95b8245","modified":1536364548798},{"_id":"public/schedule/index.html","hash":"9e5d75b9ee5d4aadc4dc93c6ba6d6c5760e94ad5","modified":1536364548799},{"_id":"public/tags/index.html","hash":"db68843ef164d513c847bf8cafbc7e21301f38b1","modified":1536364548800},{"_id":"public/2018/04/24/python-让jupyter-notebook支持python3.html","hash":"5a6b07feaf3bc8ba315fe447b8160b7a8a559481","modified":1536364548800},{"_id":"public/2018/04/21/python-为Python添加默认模块搜索路径.html","hash":"bc8975f13e33445ddf556d45d047c27f9dfc9abb","modified":1536364548801},{"_id":"public/2018/04/18/python-pip更改国内镜像.html","hash":"4a6e3cb5b28c4a6bc8cf142c5c16786b3cc880b3","modified":1536364548801},{"_id":"public/2018/04/16/软件-Clion关联-高亮-cuda代码.html","hash":"cdddb1a78097ce422f3f7fbc28e7cad8105ff639","modified":1536364548805},{"_id":"public/2018/04/15/运维-使用国内免费CDN加速GitHub-Pages.html","hash":"4cd3013a0fe7b5b3b1ce395abfb5bd06c34a4037","modified":1536364548806},{"_id":"public/2018/04/14/c-定义类型别名.html","hash":"82ae73e206d0ee9e5f78a34071fd5f4ec673f5fc","modified":1536364548807},{"_id":"public/2018/04/14/c-单例模式.html","hash":"9adfca298378b3eeda05dc41966075a766e41f25","modified":1536364548808},{"_id":"public/2018/04/14/test.html","hash":"8832b6801e8542dd5daecc0a74a051cf7326f257","modified":1536364548808},{"_id":"public/2018/04/14/c-工厂模式.html","hash":"1366abb70ee4dc81ee1a03b31f94e8928da9ff5f","modified":1536364548811},{"_id":"public/2018/04/13/使用shadowsocks访问google-scholar.html","hash":"2a1caf9de6269b38e5b5187cb946e031b7a90fd8","modified":1536364548813},{"_id":"public/archives/index.html","hash":"df31e1f5bfd7a7b99c9269244bd5e2f0b5620a96","modified":1536364548813},{"_id":"public/archives/2018/index.html","hash":"bff0f35859a2736fbe46d6b627ee7acad453369c","modified":1536364548814},{"_id":"public/archives/2018/04/index.html","hash":"77cad3a4c9e3ee6f4ae255d1cc73888cbd6705a9","modified":1536364548814},{"_id":"public/categories/c/index.html","hash":"f038d6230cea1219cb312e19558582211188462b","modified":1536364548815},{"_id":"public/categories/python/index.html","hash":"7b7c2502da8984b32cc21d9c2ac4d7e72c598602","modified":1536364548815},{"_id":"public/categories/运维/index.html","hash":"95b8a85288d02724ba6f49d22a2de6d90244e91f","modified":1536364548816},{"_id":"public/categories/软件/index.html","hash":"7d64cfcbb52e5422c5179dc844ba80c9358c0b7b","modified":1536364548817},{"_id":"public/index.html","hash":"77df59dd519a6defcf85e2e98b9c68ef87e6cc9d","modified":1536364548818},{"_id":"public/tags/c/index.html","hash":"da24caea01ab141d1670a480be2d0d35f38b2df7","modified":1536364548818},{"_id":"public/tags/编程/index.html","hash":"7cbd7095667c375d7e96136d859f157c9115f63d","modified":1536364548819},{"_id":"public/tags/python/index.html","hash":"38e82e9a08ad07df3339bfa168907ccc4dff0d11","modified":1536364548819},{"_id":"public/tags/shadowsocks/index.html","hash":"bb816e8e90f0483a96877afd1246c697f92008e4","modified":1536364548820},{"_id":"public/tags/翻墙/index.html","hash":"1c4468451f64c7062606885cb8dddbcc722e7787","modified":1536364548820},{"_id":"public/tags/运维/index.html","hash":"6f8aca416d8a3530eaf95a17e15f2c94576eef8f","modified":1536364548821},{"_id":"public/tags/软件/index.html","hash":"1c35664cdee52223d983e6117f9546dd2acda158","modified":1536364548822},{"_id":"public/tags/Clion/index.html","hash":"3bdafe8728d1f51f2fcb15b47331b49bb68efa38","modified":1536364548822},{"_id":"public/CNAME","hash":"322af0dbb9daab0e254a046cb2fc2bd67254f0bc","modified":1536364548870},{"_id":"public/README.md","hash":"a68f14fb4710f2db7af2b07614b918a2890a3b8d","modified":1536364548871},{"_id":"public/google0f8fac7da2b48ef8.html","hash":"6a50d857705ed4e87fb73758b00223f78d10b9f9","modified":1536364548871},{"_id":"public/images/avatar.jpg","hash":"08753998729ef2cb9ce2b3eb3a1fa009d17ba585","modified":1536364548871},{"_id":"public/images/avatar1.jpg","hash":"e5122333f90be050fde3082283c88a30cfe93863","modified":1536364548871},{"_id":"public/images/pasted-1.png","hash":"911bf9b39e6d43230b8978cea8b5c26f9863c01d","modified":1536364548872},{"_id":"public/images/pasted-2.png","hash":"ebda614a4b7f538fde6191232e7bce61a47d7a85","modified":1536364548872},{"_id":"public/images/favicon.ico","hash":"ada609c7d1737a3f56d84f8d7de41797c0fc22f2","modified":1536364548873},{"_id":"public/images/pasted-0.png","hash":"0f34c12b5b61e8a1eec7a91e15f101461653e750","modified":1536364548874},{"_id":"public/images/alipay-reward-image.jpg","hash":"1eb4bf57cee466a1ea3865c397a365f7b56d4158","modified":1536364548874},{"_id":"public/images/pasted-3.png","hash":"f81b3a91f77a5c1a1894897ce924ca7f757f95f5","modified":1536364548875},{"_id":"public/images/pasted-4.png","hash":"b8d67423e1f70b120e002c29fd110abbb597ddb9","modified":1536364548875},{"_id":"public/images/wechat-qcode.jpg","hash":"28f2b19f0982c1c45abb3e7137b6ee7db7355f83","modified":1536364548876},{"_id":"public/images/wechat-reward-image.jpg","hash":"42e245e28b9205b72d7a1855bf0d6a78feae0009","modified":1536364548876},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1536364548877},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1536364548878},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1536364548878},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1536364548878},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1536364548878},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1536364548879},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1536364548879},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1536364548880},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1536364548880},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1536364548881},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1536364548881},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1536364548881},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1536364548882},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1536364548882},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1536364548882},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1536364548883},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1536364548883},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1536364548884},{"_id":"public/lib/Han/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1536364548884},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1536364548884},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1536364548885},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1536364548885},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1536364548886},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1536364548886},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1536364548886},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1536364548888},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1536364553187},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1536364553211},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1536364553265},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1536364553265},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1536364553266},{"_id":"public/js/src/bootstrap.js","hash":"40de94fd18fcbd67a327d63b0d1e242a08aa5404","modified":1536364553266},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1536364553266},{"_id":"public/js/src/motion.js","hash":"50e57f8acb6924c6999cdcc664ddd3f0730d2061","modified":1536364553267},{"_id":"public/js/src/post-details.js","hash":"d1333fb588d4521b4d1e9c69aef06e0ad1bf0b12","modified":1536364553267},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1536364553267},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1536364553268},{"_id":"public/js/src/utils.js","hash":"4284c67ea1435de2acd523f6d48c0d073fd1ad03","modified":1536364553268},{"_id":"public/lib/Han/README.html","hash":"3d63363c9ed86205d8caffa56a7876be76eef434","modified":1536364553268},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1536364553268},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1536364553269},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1536364553271},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1536364553272},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1536364553273},{"_id":"public/css/main.css","hash":"72c2caf061e1603bc8ccf790b452abd1547bbddf","modified":1536364553273},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1536364553273},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1536364553274},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1536364553274},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1536364553274},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1536364553275},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1536364553275},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1536364553276},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1536364553276},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1536364553276},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1536364553277},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1536364553277},{"_id":"public/images/avatar.png","hash":"402dc924755f09549a5e4cf3301bde6415606624","modified":1536364553304}],"Category":[{"name":"c++","_id":"cjlsnrrk80004ly0l1a2q388k"},{"name":"python","_id":"cjlsnrro5000lly0laa05xav7"},{"name":"运维","_id":"cjlsnrrpb0011ly0lbzz5lsm0"},{"name":"软件","_id":"cjlsnrrph0017ly0lg0mdt4fl"}],"Data":[],"Page":[{"title":"个人简介","comments":0,"date":"2018-04-13T23:27:37.000Z","type":null,"_content":"\n### 教育经历\n| 时间|学历|学校\n|-|-|-|\n|2014.09~2017.07|硕士|中国科学院大学\n|2009.09~2013.07|本科|曲阜师范大学\n\n\n\n\n### 发表论文\n* [《Deep Object Tracking with Multi-modal Data》](https://ieeexplore.ieee.org/abstract/document/7546403/)（IEEE CITS 2016）\n* [《复杂背景下甜瓜果实分割算法》](http://www.tcsae.org/nygcxb/ch/reader/view_abstract.aspx?file_no=20140223)（农业工程学报）\n* [《小波变换和特征加权融合的人脸识别》](http://www.cjig.cn/jig/ch/reader/view_abstract.aspx?file_no=20121209)（中国图象图形学报）\n* [《基于支持向量机的人脸识别算法研究》](http://www.cnki.com.cn/Article/CJFDTotal-KXJS201134053.htm)（科学技术与工程）\n* [《一种基于图像分块加权的（2D）2PCA人脸特征提取方法》](http://www.cnki.com.cn/Article/CJFDTOTAL-JGZZ201305011.htm)（激光杂志）\n\n\n### 荣誉奖励\n\n* [IEEE CITS 2016 最佳论文奖](http://opt.cas.cn/xwzx/tpxw/201607/t20160715_4641677.html)\n* 山东省大学生物理创新科技大赛（二等奖）\n* 第四届济宁市自然科学学术创新奖论文和建议类（一等奖）\n* 山东省优秀毕业生\n* 山东省优秀毕业论文\n* [挑战杯大赛校级二等奖](http://www.tiaozhanbei.net/project/4368/)\n\n### 工作经历\n| 时间|工作 |单位\n|-|-|-|\n|2017.07~至今|算法工程师|[地平线机器人](http://www.horizon-robotics.com)|\n\n","source":"about/index.md","raw":"title: 个人简介\ncomments: false\ndate: 2018-04-14 07:27:37\ntype:\n---\n\n### 教育经历\n| 时间|学历|学校\n|-|-|-|\n|2014.09~2017.07|硕士|中国科学院大学\n|2009.09~2013.07|本科|曲阜师范大学\n\n\n\n\n### 发表论文\n* [《Deep Object Tracking with Multi-modal Data》](https://ieeexplore.ieee.org/abstract/document/7546403/)（IEEE CITS 2016）\n* [《复杂背景下甜瓜果实分割算法》](http://www.tcsae.org/nygcxb/ch/reader/view_abstract.aspx?file_no=20140223)（农业工程学报）\n* [《小波变换和特征加权融合的人脸识别》](http://www.cjig.cn/jig/ch/reader/view_abstract.aspx?file_no=20121209)（中国图象图形学报）\n* [《基于支持向量机的人脸识别算法研究》](http://www.cnki.com.cn/Article/CJFDTotal-KXJS201134053.htm)（科学技术与工程）\n* [《一种基于图像分块加权的（2D）2PCA人脸特征提取方法》](http://www.cnki.com.cn/Article/CJFDTOTAL-JGZZ201305011.htm)（激光杂志）\n\n\n### 荣誉奖励\n\n* [IEEE CITS 2016 最佳论文奖](http://opt.cas.cn/xwzx/tpxw/201607/t20160715_4641677.html)\n* 山东省大学生物理创新科技大赛（二等奖）\n* 第四届济宁市自然科学学术创新奖论文和建议类（一等奖）\n* 山东省优秀毕业生\n* 山东省优秀毕业论文\n* [挑战杯大赛校级二等奖](http://www.tiaozhanbei.net/project/4368/)\n\n### 工作经历\n| 时间|工作 |单位\n|-|-|-|\n|2017.07~至今|算法工程师|[地平线机器人](http://www.horizon-robotics.com)|\n\n","updated":"2018-09-07T23:54:36.698Z","path":"about/index.html","layout":"page","_id":"cjlsnrrj70001ly0llbzro77y","content":"<h3 id=\"教育经历\"><a href=\"#教育经历\" class=\"headerlink\" title=\"教育经历\"></a>教育经历</h3><table>\n<thead>\n<tr>\n<th>时间</th>\n<th>学历</th>\n<th>学校</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2014.09~2017.07</td>\n<td>硕士</td>\n<td>中国科学院大学</td>\n</tr>\n<tr>\n<td>2009.09~2013.07</td>\n<td>本科</td>\n<td>曲阜师范大学</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"发表论文\"><a href=\"#发表论文\" class=\"headerlink\" title=\"发表论文\"></a>发表论文</h3><ul>\n<li><a href=\"https://ieeexplore.ieee.org/abstract/document/7546403/\" target=\"_blank\" rel=\"noopener\">《Deep Object Tracking with Multi-modal Data》</a>（IEEE CITS 2016）</li>\n<li><a href=\"http://www.tcsae.org/nygcxb/ch/reader/view_abstract.aspx?file_no=20140223\" target=\"_blank\" rel=\"noopener\">《复杂背景下甜瓜果实分割算法》</a>（农业工程学报）</li>\n<li><a href=\"http://www.cjig.cn/jig/ch/reader/view_abstract.aspx?file_no=20121209\" target=\"_blank\" rel=\"noopener\">《小波变换和特征加权融合的人脸识别》</a>（中国图象图形学报）</li>\n<li><a href=\"http://www.cnki.com.cn/Article/CJFDTotal-KXJS201134053.htm\" target=\"_blank\" rel=\"noopener\">《基于支持向量机的人脸识别算法研究》</a>（科学技术与工程）</li>\n<li><a href=\"http://www.cnki.com.cn/Article/CJFDTOTAL-JGZZ201305011.htm\" target=\"_blank\" rel=\"noopener\">《一种基于图像分块加权的（2D）2PCA人脸特征提取方法》</a>（激光杂志）</li>\n</ul>\n<h3 id=\"荣誉奖励\"><a href=\"#荣誉奖励\" class=\"headerlink\" title=\"荣誉奖励\"></a>荣誉奖励</h3><ul>\n<li><a href=\"http://opt.cas.cn/xwzx/tpxw/201607/t20160715_4641677.html\" target=\"_blank\" rel=\"noopener\">IEEE CITS 2016 最佳论文奖</a></li>\n<li>山东省大学生物理创新科技大赛（二等奖）</li>\n<li>第四届济宁市自然科学学术创新奖论文和建议类（一等奖）</li>\n<li>山东省优秀毕业生</li>\n<li>山东省优秀毕业论文</li>\n<li><a href=\"http://www.tiaozhanbei.net/project/4368/\" target=\"_blank\" rel=\"noopener\">挑战杯大赛校级二等奖</a></li>\n</ul>\n<h3 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h3><table>\n<thead>\n<tr>\n<th>时间</th>\n<th>工作</th>\n<th>单位</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2017.07~至今</td>\n<td>算法工程师</td>\n<td><a href=\"http://www.horizon-robotics.com\" target=\"_blank\" rel=\"noopener\">地平线机器人</a></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"教育经历\"><a href=\"#教育经历\" class=\"headerlink\" title=\"教育经历\"></a>教育经历</h3><table>\n<thead>\n<tr>\n<th>时间</th>\n<th>学历</th>\n<th>学校</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2014.09~2017.07</td>\n<td>硕士</td>\n<td>中国科学院大学</td>\n</tr>\n<tr>\n<td>2009.09~2013.07</td>\n<td>本科</td>\n<td>曲阜师范大学</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"发表论文\"><a href=\"#发表论文\" class=\"headerlink\" title=\"发表论文\"></a>发表论文</h3><ul>\n<li><a href=\"https://ieeexplore.ieee.org/abstract/document/7546403/\" target=\"_blank\" rel=\"noopener\">《Deep Object Tracking with Multi-modal Data》</a>（IEEE CITS 2016）</li>\n<li><a href=\"http://www.tcsae.org/nygcxb/ch/reader/view_abstract.aspx?file_no=20140223\" target=\"_blank\" rel=\"noopener\">《复杂背景下甜瓜果实分割算法》</a>（农业工程学报）</li>\n<li><a href=\"http://www.cjig.cn/jig/ch/reader/view_abstract.aspx?file_no=20121209\" target=\"_blank\" rel=\"noopener\">《小波变换和特征加权融合的人脸识别》</a>（中国图象图形学报）</li>\n<li><a href=\"http://www.cnki.com.cn/Article/CJFDTotal-KXJS201134053.htm\" target=\"_blank\" rel=\"noopener\">《基于支持向量机的人脸识别算法研究》</a>（科学技术与工程）</li>\n<li><a href=\"http://www.cnki.com.cn/Article/CJFDTOTAL-JGZZ201305011.htm\" target=\"_blank\" rel=\"noopener\">《一种基于图像分块加权的（2D）2PCA人脸特征提取方法》</a>（激光杂志）</li>\n</ul>\n<h3 id=\"荣誉奖励\"><a href=\"#荣誉奖励\" class=\"headerlink\" title=\"荣誉奖励\"></a>荣誉奖励</h3><ul>\n<li><a href=\"http://opt.cas.cn/xwzx/tpxw/201607/t20160715_4641677.html\" target=\"_blank\" rel=\"noopener\">IEEE CITS 2016 最佳论文奖</a></li>\n<li>山东省大学生物理创新科技大赛（二等奖）</li>\n<li>第四届济宁市自然科学学术创新奖论文和建议类（一等奖）</li>\n<li>山东省优秀毕业生</li>\n<li>山东省优秀毕业论文</li>\n<li><a href=\"http://www.tiaozhanbei.net/project/4368/\" target=\"_blank\" rel=\"noopener\">挑战杯大赛校级二等奖</a></li>\n</ul>\n<h3 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h3><table>\n<thead>\n<tr>\n<th>时间</th>\n<th>工作</th>\n<th>单位</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2017.07~至今</td>\n<td>算法工程师</td>\n<td><a href=\"http://www.horizon-robotics.com\" target=\"_blank\" rel=\"noopener\">地平线机器人</a></td>\n</tr>\n</tbody>\n</table>\n"},{"title":"分类","comments":0,"date":"2018-04-14T00:23:55.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ncomments: false\ndate: 2018-04-14 08:23:55\ntype: \"categories\"\n---\n","updated":"2018-09-07T23:54:36.718Z","path":"categories/index.html","layout":"page","_id":"cjlsnrrjo0003ly0l5b6b0f80","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"schedule","comments":0,"date":"2018-04-14T00:24:12.000Z","type":"schedule","_content":"","source":"schedule/index.md","raw":"---\ntitle: schedule\ncomments: false\ndate: 2018-04-14 08:24:12\ntype: \"schedule\"\n---\n","updated":"2018-09-07T23:54:36.726Z","path":"schedule/index.html","layout":"page","_id":"cjlsnrrkt0007ly0lg9kvyhck","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","comments":0,"date":"2018-04-14T00:24:38.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ncomments: false\ndate: 2018-04-14 08:24:38\ntype: \"tags\"\n---\n","updated":"2018-09-07T23:54:36.718Z","path":"tags/index.html","layout":"page","_id":"cjlsnrrld0009ly0ljobjct9x","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"c++-单例模式","comments":1,"updated":"2018-09-07T23:54:36.646Z","author":"张学志","date":"2018-04-14T10:20:00.000Z","_content":"> 本文描述了单例模式的基本概念和一个例子。\n<!-- more -->\n\n## 基本概念\n* Singleton 是对全局变量的取代策略。\n* 作用：保证一个类只能有一个实例，并提供一个全局唯一的访问点。\n\t* 仅有一个实例：通过类的静态成员变量来体现。\n\t* 提供访问它的全局访问点：访问静态成员变量的静态成员函数来体现。\n* 定义一个单例类，使用类的私有静态指针变量指向类的唯一实例，并用一个公有的静态方法获取该实例。\n* 唯一实例类Singleton在静态成员函数中隐藏创建实例的操作。\n* 特征：\n\t* 它有一个指向唯一实例的静态指针，并且是私有的；\n\t* 它有一个公有的函数，可以获取这个唯一的实例，并且在需要的时候创建该实例；\n\t* 它的构造函数是私有的，这样就不能从别处创建该类的实例。\n\n\n## 例子\n\n* 单例类的头文件：`Singleton.h`\n\n```\n//\n// Created by xuezhi.zhang on 4/15/18.\n//\n\n#ifndef _SINGLETON_H_\n#define _SINGLETON_H_\n\nclass Singleton{\nprivate:\n  static Singleton* pInstance; //静态成员，保存对象的唯一实例\n  Singleton(); //私有化构造函数，使其无法在类外实例化\npublic:\n  static Singleton* Instance();\n  static void Destroy();\n};\n\n#endif //UNTITLED_SINGLETON_H\n\n```\n\n* 单例类的实现文件：`Singleton.pp`\n\n```\n//\n// Created by xuezhi.zhang on 4/15/18.\n//\n#include <iostream>\n#include \"Singleton.h\"\n\nusing namespace std;\n\nSingleton* Singleton::pInstance = NULL;\n\n\nSingleton::Singleton() {\n  cout << \"Singleton...\" << endl;\n}\n\n\nSingleton* Singleton::Instance() {\n  if (NULL == pInstance)\n    pInstance = new Singleton();\n  return pInstance;\n}\n\n\nvoid Singleton::Destroy() {\n  delete pInstance;\n  pInstance = NULL;\n  cout << \"Destroy...\" << endl;\n}\n\n\n```\n\n* 调用文件：`main.h`\n\n\n```\n#include <iostream>\n#include \"Singleton.h\"\n\nusing namespace std;\n\nint main()\n{\n  Singleton* ps = Singleton::Instance();\n  Singleton::Destroy();\n\n  return 0;\n}\n```\n\n\n## 参考\n* [C++设计模式-Singleton](https://www.cnblogs.com/jiese/p/3158517.html)","source":"_posts/c-单例模式.md","raw":"title: c++-单例模式\ntags:\n  - c++\n  - 编程\ncategories:\n  - c++\n  - ''\ncomments: true\nupdated: false\nauthor: 张学志\ndate: 2018-04-14 18:20:00\n---\n> 本文描述了单例模式的基本概念和一个例子。\n<!-- more -->\n\n## 基本概念\n* Singleton 是对全局变量的取代策略。\n* 作用：保证一个类只能有一个实例，并提供一个全局唯一的访问点。\n\t* 仅有一个实例：通过类的静态成员变量来体现。\n\t* 提供访问它的全局访问点：访问静态成员变量的静态成员函数来体现。\n* 定义一个单例类，使用类的私有静态指针变量指向类的唯一实例，并用一个公有的静态方法获取该实例。\n* 唯一实例类Singleton在静态成员函数中隐藏创建实例的操作。\n* 特征：\n\t* 它有一个指向唯一实例的静态指针，并且是私有的；\n\t* 它有一个公有的函数，可以获取这个唯一的实例，并且在需要的时候创建该实例；\n\t* 它的构造函数是私有的，这样就不能从别处创建该类的实例。\n\n\n## 例子\n\n* 单例类的头文件：`Singleton.h`\n\n```\n//\n// Created by xuezhi.zhang on 4/15/18.\n//\n\n#ifndef _SINGLETON_H_\n#define _SINGLETON_H_\n\nclass Singleton{\nprivate:\n  static Singleton* pInstance; //静态成员，保存对象的唯一实例\n  Singleton(); //私有化构造函数，使其无法在类外实例化\npublic:\n  static Singleton* Instance();\n  static void Destroy();\n};\n\n#endif //UNTITLED_SINGLETON_H\n\n```\n\n* 单例类的实现文件：`Singleton.pp`\n\n```\n//\n// Created by xuezhi.zhang on 4/15/18.\n//\n#include <iostream>\n#include \"Singleton.h\"\n\nusing namespace std;\n\nSingleton* Singleton::pInstance = NULL;\n\n\nSingleton::Singleton() {\n  cout << \"Singleton...\" << endl;\n}\n\n\nSingleton* Singleton::Instance() {\n  if (NULL == pInstance)\n    pInstance = new Singleton();\n  return pInstance;\n}\n\n\nvoid Singleton::Destroy() {\n  delete pInstance;\n  pInstance = NULL;\n  cout << \"Destroy...\" << endl;\n}\n\n\n```\n\n* 调用文件：`main.h`\n\n\n```\n#include <iostream>\n#include \"Singleton.h\"\n\nusing namespace std;\n\nint main()\n{\n  Singleton* ps = Singleton::Instance();\n  Singleton::Destroy();\n\n  return 0;\n}\n```\n\n\n## 参考\n* [C++设计模式-Singleton](https://www.cnblogs.com/jiese/p/3158517.html)","slug":"c-单例模式","published":1,"layout":"post","photos":[],"link":"","_id":"cjlsnrril0000ly0lfty79cr2","content":"<blockquote>\n<p>本文描述了单例模式的基本概念和一个例子。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ul>\n<li>Singleton 是对全局变量的取代策略。</li>\n<li>作用：保证一个类只能有一个实例，并提供一个全局唯一的访问点。<ul>\n<li>仅有一个实例：通过类的静态成员变量来体现。</li>\n<li>提供访问它的全局访问点：访问静态成员变量的静态成员函数来体现。</li>\n</ul>\n</li>\n<li>定义一个单例类，使用类的私有静态指针变量指向类的唯一实例，并用一个公有的静态方法获取该实例。</li>\n<li>唯一实例类Singleton在静态成员函数中隐藏创建实例的操作。</li>\n<li>特征：<ul>\n<li>它有一个指向唯一实例的静态指针，并且是私有的；</li>\n<li>它有一个公有的函数，可以获取这个唯一的实例，并且在需要的时候创建该实例；</li>\n<li>它的构造函数是私有的，这样就不能从别处创建该类的实例。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><ul>\n<li>单例类的头文件：<code>Singleton.h</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by xuezhi.zhang on 4/15/18.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _SINGLETON_H_</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _SINGLETON_H_</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton</span>&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"keyword\">static</span> Singleton* pInstance; <span class=\"comment\">//静态成员，保存对象的唯一实例</span></span><br><span class=\"line\">  Singleton(); <span class=\"comment\">//私有化构造函数，使其无法在类外实例化</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> Singleton* <span class=\"title\">Instance</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Destroy</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">//UNTITLED_SINGLETON_H</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>单例类的实现文件：<code>Singleton.pp</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by xuezhi.zhang on 4/15/18.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Singleton.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Singleton* Singleton::pInstance = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Singleton::Singleton() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Singleton...\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Singleton* Singleton::Instance() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == pInstance)</span><br><span class=\"line\">    pInstance = <span class=\"keyword\">new</span> Singleton();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pInstance;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> Singleton::Destroy() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pInstance;</span><br><span class=\"line\">  pInstance = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Destroy...\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>调用文件：<code>main.h</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Singleton.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  Singleton* ps = Singleton::Instance();</span><br><span class=\"line\">  Singleton::Destroy();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.cnblogs.com/jiese/p/3158517.html\" target=\"_blank\" rel=\"noopener\">C++设计模式-Singleton</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文描述了单例模式的基本概念和一个例子。<br>","more":"</p>\n</blockquote>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ul>\n<li>Singleton 是对全局变量的取代策略。</li>\n<li>作用：保证一个类只能有一个实例，并提供一个全局唯一的访问点。<ul>\n<li>仅有一个实例：通过类的静态成员变量来体现。</li>\n<li>提供访问它的全局访问点：访问静态成员变量的静态成员函数来体现。</li>\n</ul>\n</li>\n<li>定义一个单例类，使用类的私有静态指针变量指向类的唯一实例，并用一个公有的静态方法获取该实例。</li>\n<li>唯一实例类Singleton在静态成员函数中隐藏创建实例的操作。</li>\n<li>特征：<ul>\n<li>它有一个指向唯一实例的静态指针，并且是私有的；</li>\n<li>它有一个公有的函数，可以获取这个唯一的实例，并且在需要的时候创建该实例；</li>\n<li>它的构造函数是私有的，这样就不能从别处创建该类的实例。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><ul>\n<li>单例类的头文件：<code>Singleton.h</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by xuezhi.zhang on 4/15/18.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _SINGLETON_H_</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _SINGLETON_H_</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton</span>&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"keyword\">static</span> Singleton* pInstance; <span class=\"comment\">//静态成员，保存对象的唯一实例</span></span><br><span class=\"line\">  Singleton(); <span class=\"comment\">//私有化构造函数，使其无法在类外实例化</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> Singleton* <span class=\"title\">Instance</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Destroy</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">//UNTITLED_SINGLETON_H</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>单例类的实现文件：<code>Singleton.pp</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by xuezhi.zhang on 4/15/18.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Singleton.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Singleton* Singleton::pInstance = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Singleton::Singleton() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Singleton...\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Singleton* Singleton::Instance() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == pInstance)</span><br><span class=\"line\">    pInstance = <span class=\"keyword\">new</span> Singleton();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pInstance;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> Singleton::Destroy() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pInstance;</span><br><span class=\"line\">  pInstance = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Destroy...\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>调用文件：<code>main.h</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Singleton.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  Singleton* ps = Singleton::Instance();</span><br><span class=\"line\">  Singleton::Destroy();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.cnblogs.com/jiese/p/3158517.html\" target=\"_blank\" rel=\"noopener\">C++设计模式-Singleton</a></li>\n</ul>"},{"title":"c++-定义类型别名","comments":1,"updated":"2018-09-07T23:54:36.646Z","author":"张学志","date":"2018-04-14T14:24:00.000Z","_content":"> 本文描述了C++中的3种定义“类型别名”的方式。\n<!-- more -->\n\n\n## 概述\n* C++定义“类型别名”的3种方式：\n\t* `typedef`\n\t* `#define`\n\t* `using`\n\n```\ntypedef 原来类型名 新类型名；\n\n#define 新类型名 原类型名\n\nusing 新类型名 = 原来类型名;\n```\n\n## 异同\n* 一般情况下，using与typedef所表述的意思没有区别。但是，涉及到为模板类型设置别名时，就出现差异了。C++编译器不支持使用typedef关键词为模板类设置别名，但是使用using的方式声明一个关键词却是允许的，这是C++11标准才有的。\n* `#define`和`typedef`的异同：\n * `#define`是在程序预处理阶段完成的 ,也叫宏定义；\n * `#typedef`是在编译的时候完成的;后者更为灵活方便；\n * `#define`在处理指针方面处理不好,`typedef`处理更加合适。\n\n\n\n## 参考\n\n* [类型别名typedef与#define](https://blog.csdn.net/qq_29924041/article/details/54588487)\n* [使用using与typedef来定义别名](https://www.cnblogs.com/yutongqing/p/6794652.html)\n\n\n\n\n\n\n","source":"_posts/c-定义类型别名.md","raw":"title: c++-定义类型别名\ntags:\n  - c++\n  - 编程\ncategories:\n  - c++\n  - ''\ncomments: true\nupdated: false\nauthor: 张学志\ndate: 2018-04-14 22:24:00\n---\n> 本文描述了C++中的3种定义“类型别名”的方式。\n<!-- more -->\n\n\n## 概述\n* C++定义“类型别名”的3种方式：\n\t* `typedef`\n\t* `#define`\n\t* `using`\n\n```\ntypedef 原来类型名 新类型名；\n\n#define 新类型名 原类型名\n\nusing 新类型名 = 原来类型名;\n```\n\n## 异同\n* 一般情况下，using与typedef所表述的意思没有区别。但是，涉及到为模板类型设置别名时，就出现差异了。C++编译器不支持使用typedef关键词为模板类设置别名，但是使用using的方式声明一个关键词却是允许的，这是C++11标准才有的。\n* `#define`和`typedef`的异同：\n * `#define`是在程序预处理阶段完成的 ,也叫宏定义；\n * `#typedef`是在编译的时候完成的;后者更为灵活方便；\n * `#define`在处理指针方面处理不好,`typedef`处理更加合适。\n\n\n\n## 参考\n\n* [类型别名typedef与#define](https://blog.csdn.net/qq_29924041/article/details/54588487)\n* [使用using与typedef来定义别名](https://www.cnblogs.com/yutongqing/p/6794652.html)\n\n\n\n\n\n\n","slug":"c-定义类型别名","published":1,"layout":"post","photos":[],"link":"","_id":"cjlsnrrjf0002ly0lmnlmm9kx","content":"<blockquote>\n<p>本文描述了C++中的3种定义“类型别名”的方式。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><ul>\n<li>C++定义“类型别名”的3种方式：<ul>\n<li><code>typedef</code></li>\n<li><code>#define</code></li>\n<li><code>using</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> 原来类型名 新类型名；</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> 新类型名 原类型名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> 新类型名 = 原来类型名;</span><br></pre></td></tr></table></figure>\n<h2 id=\"异同\"><a href=\"#异同\" class=\"headerlink\" title=\"异同\"></a>异同</h2><ul>\n<li>一般情况下，using与typedef所表述的意思没有区别。但是，涉及到为模板类型设置别名时，就出现差异了。C++编译器不支持使用typedef关键词为模板类设置别名，但是使用using的方式声明一个关键词却是允许的，这是C++11标准才有的。</li>\n<li><code>#define</code>和<code>typedef</code>的异同：<ul>\n<li><code>#define</code>是在程序预处理阶段完成的 ,也叫宏定义；</li>\n<li><code>#typedef</code>是在编译的时候完成的;后者更为灵活方便；</li>\n<li><code>#define</code>在处理指针方面处理不好,<code>typedef</code>处理更加合适。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://blog.csdn.net/qq_29924041/article/details/54588487\" target=\"_blank\" rel=\"noopener\">类型别名typedef与#define</a></li>\n<li><a href=\"https://www.cnblogs.com/yutongqing/p/6794652.html\" target=\"_blank\" rel=\"noopener\">使用using与typedef来定义别名</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文描述了C++中的3种定义“类型别名”的方式。<br>","more":"</p>\n</blockquote>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><ul>\n<li>C++定义“类型别名”的3种方式：<ul>\n<li><code>typedef</code></li>\n<li><code>#define</code></li>\n<li><code>using</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> 原来类型名 新类型名；</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> 新类型名 原类型名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> 新类型名 = 原来类型名;</span><br></pre></td></tr></table></figure>\n<h2 id=\"异同\"><a href=\"#异同\" class=\"headerlink\" title=\"异同\"></a>异同</h2><ul>\n<li>一般情况下，using与typedef所表述的意思没有区别。但是，涉及到为模板类型设置别名时，就出现差异了。C++编译器不支持使用typedef关键词为模板类设置别名，但是使用using的方式声明一个关键词却是允许的，这是C++11标准才有的。</li>\n<li><code>#define</code>和<code>typedef</code>的异同：<ul>\n<li><code>#define</code>是在程序预处理阶段完成的 ,也叫宏定义；</li>\n<li><code>#typedef</code>是在编译的时候完成的;后者更为灵活方便；</li>\n<li><code>#define</code>在处理指针方面处理不好,<code>typedef</code>处理更加合适。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://blog.csdn.net/qq_29924041/article/details/54588487\" target=\"_blank\" rel=\"noopener\">类型别名typedef与#define</a></li>\n<li><a href=\"https://www.cnblogs.com/yutongqing/p/6794652.html\" target=\"_blank\" rel=\"noopener\">使用using与typedef来定义别名</a></li>\n</ul>"},{"title":"c++-工厂模式","comments":1,"updated":"2018-09-07T23:54:36.646Z","author":"张学志","date":"2018-04-13T22:43:00.000Z","_content":"> 本文描述了c++工厂模式基本概念和一个例子。\n<!-- more -->\n\n## 基本概念\n* 定义一个用于创建对象的接口，让子类决定实例化哪一个类。Factory Method使一个类的实例化延迟到其子类。又叫虚拟构造子（Virtual Constructor）模式或者多态性工厂（Polymorphic Factory）模式。 \n*  工厂模式的好处：工厂模式就相当于创建实例对象的new。工厂模式也是用来创建实例对象的，可能多做一些工作，但会给你系统带来更大的可扩展性和尽量少的修改量。\n* 通常我们都要在创建sample实例时做点初始化的工作。\n* 需要将创建实例的工作与使用实例的工作分开, 也就是说，让创建实例所需要的大量初始化工作从Sample的构造函数中分离出去。\n* 工厂模式是一个创建性的模式，他要求工厂类和产品类分开，由一个工厂类可以根据传入的参量决定创建出哪一种产品类的实例。但这些不同的实例有共同的父类\n\n\n\n## 例子\n\n* 文件：`main.cpp`\n\n```\n#include <iostream>\nusing namespace std;\n\nclass IHuman\n{\npublic:\n  IHuman(void)\n  {\n\n  }\n  ~IHuman()\n  {\n\n  }\n  virtual void Laugh() = 0;\n  virtual void Cry() = 0;\n  virtual void Talk() = 0;\n\n};\n\nclass WhiteHuman : public IHuman\n{\npublic:\n  WhiteHuman(void)\n  {\n\n  }\n  ~WhiteHuman(void)\n  {\n\n  }\n  void Laugh()\n  {\n    std::cout << \"白种人笑！\" << std::endl;\n  }\n  void Cry()\n  {\n    std::cout << \"白种人哭！\" <<std::endl;\n  }\n  void Talk()\n  {\n    std::cout << \"白种人说话！\" <<std::endl;\n  }\n};\n\nclass YellowHuman : public IHuman\n{\npublic:\n  YellowHuman(void)\n  {\n\n  }\n  ~YellowHuman(void)\n  {\n\n  }\n  void Laugh()\n  {\n    std::cout << \"黄种人笑！\" << std::endl;\n  }\n  void Cry()\n  {\n    std::cout << \"黄种人哭！\" <<std::endl;\n  }\n  void Talk()\n  {\n    std::cout << \"黄种人说话！\" <<std::endl;\n  }\n};\n\nclass BlackHuman : public IHuman\n{\npublic:\n  BlackHuman(void)\n  {\n\n  }\n  ~BlackHuman(void)\n  {\n\n  }\n  void Laugh()\n  {\n    std::cout << \"黑种人笑！\" << std::endl;\n  }\n  void Cry()\n  {\n    std::cout << \"黑种人哭！\" <<std::endl;\n  }\n  void Talk()\n  {\n    std::cout << \"黑种人说话！\" <<std::endl;\n  }\n};\n\n\nclass IHumanFactory\n{\npublic:\n  IHumanFactory(void)\n  {\n\n  }\n  ~IHumanFactory(void)\n  {\n\n  }\n  virtual IHuman* CreateHuman() = 0;\n\n};\n\n\nclass WhiteHumanFactory: public IHumanFactory\n{\npublic:\n  WhiteHumanFactory(void)\n  {\n\n  }\n  ~WhiteHumanFactory(void)\n  {\n\n  }\n  IHuman *CreateHuman()\n  {\n    return new WhiteHuman();\n  }\n\n};\n\nclass YellowHumanFactory: public IHumanFactory\n{\npublic:\n  YellowHumanFactory(void)\n  {\n\n  }\n  ~YellowHumanFactory(void)\n  {\n\n  }\n  IHuman *CreateHuman()\n  {\n    return new YellowHuman();\n  }\n\n};\n\nclass BlackHumanFactory: public IHumanFactory\n{\npublic:\n  BlackHumanFactory(void)\n  {\n\n  }\n  ~BlackHumanFactory(void)\n  {\n\n  }\n  IHuman *CreateHuman()\n  {\n    return new BlackHuman();\n  }\n\n};\n\n\nint main()\n{\n  std::cout << \"#1.制造黄种人\"<<std::endl;\n  IHumanFactory *pHumanFactory = new YellowHumanFactory();\n  IHuman * pHuman = pHumanFactory->CreateHuman();\n  pHuman->Cry();\n  pHuman->Laugh();\n  pHuman->Talk();\n  delete pHuman;\n  delete pHumanFactory;\n\n  std::cout << \"#1.制造白种人\"<<std::endl;\n  IHumanFactory *pHumanFactory2 = new WhiteHumanFactory();\n  IHuman * pHuman2 = pHumanFactory->CreateHuman();\n  pHuman->Cry();\n  pHuman->Laugh();\n  pHuman->Talk();\n  delete pHuman2;\n  delete pHumanFactory2;\n\n  std::cout << \"#1.制造黑种人\"<<std::endl;\n  IHumanFactory *pHumanFactory3 = new BlackHumanFactory();\n  IHuman * pHuman3 = pHumanFactory->CreateHuman();\n  pHuman->Cry();\n  pHuman->Laugh();\n  pHuman->Talk();\n  delete pHuman3;\n  delete pHumanFactory3;\n\n  getchar();\n  return 0;\n\n}\n```\n\n\n## 参考\n\n* [c++工厂模式 (Factory method)](https://www.cnblogs.com/onlycxue/p/3428075.html)\n* [C++设计模式之工厂方法模式（Factory Method）](https://blog.csdn.net/hahaha777527/article/details/50965621)","source":"_posts/c-工厂模式.md","raw":"title: c++-工厂模式\ntags:\n  - c++\n  - 编程\ncategories:\n  - c++\ncomments: true\nupdated: false\nauthor: 张学志\ndate: 2018-04-14 06:43:00\n---\n> 本文描述了c++工厂模式基本概念和一个例子。\n<!-- more -->\n\n## 基本概念\n* 定义一个用于创建对象的接口，让子类决定实例化哪一个类。Factory Method使一个类的实例化延迟到其子类。又叫虚拟构造子（Virtual Constructor）模式或者多态性工厂（Polymorphic Factory）模式。 \n*  工厂模式的好处：工厂模式就相当于创建实例对象的new。工厂模式也是用来创建实例对象的，可能多做一些工作，但会给你系统带来更大的可扩展性和尽量少的修改量。\n* 通常我们都要在创建sample实例时做点初始化的工作。\n* 需要将创建实例的工作与使用实例的工作分开, 也就是说，让创建实例所需要的大量初始化工作从Sample的构造函数中分离出去。\n* 工厂模式是一个创建性的模式，他要求工厂类和产品类分开，由一个工厂类可以根据传入的参量决定创建出哪一种产品类的实例。但这些不同的实例有共同的父类\n\n\n\n## 例子\n\n* 文件：`main.cpp`\n\n```\n#include <iostream>\nusing namespace std;\n\nclass IHuman\n{\npublic:\n  IHuman(void)\n  {\n\n  }\n  ~IHuman()\n  {\n\n  }\n  virtual void Laugh() = 0;\n  virtual void Cry() = 0;\n  virtual void Talk() = 0;\n\n};\n\nclass WhiteHuman : public IHuman\n{\npublic:\n  WhiteHuman(void)\n  {\n\n  }\n  ~WhiteHuman(void)\n  {\n\n  }\n  void Laugh()\n  {\n    std::cout << \"白种人笑！\" << std::endl;\n  }\n  void Cry()\n  {\n    std::cout << \"白种人哭！\" <<std::endl;\n  }\n  void Talk()\n  {\n    std::cout << \"白种人说话！\" <<std::endl;\n  }\n};\n\nclass YellowHuman : public IHuman\n{\npublic:\n  YellowHuman(void)\n  {\n\n  }\n  ~YellowHuman(void)\n  {\n\n  }\n  void Laugh()\n  {\n    std::cout << \"黄种人笑！\" << std::endl;\n  }\n  void Cry()\n  {\n    std::cout << \"黄种人哭！\" <<std::endl;\n  }\n  void Talk()\n  {\n    std::cout << \"黄种人说话！\" <<std::endl;\n  }\n};\n\nclass BlackHuman : public IHuman\n{\npublic:\n  BlackHuman(void)\n  {\n\n  }\n  ~BlackHuman(void)\n  {\n\n  }\n  void Laugh()\n  {\n    std::cout << \"黑种人笑！\" << std::endl;\n  }\n  void Cry()\n  {\n    std::cout << \"黑种人哭！\" <<std::endl;\n  }\n  void Talk()\n  {\n    std::cout << \"黑种人说话！\" <<std::endl;\n  }\n};\n\n\nclass IHumanFactory\n{\npublic:\n  IHumanFactory(void)\n  {\n\n  }\n  ~IHumanFactory(void)\n  {\n\n  }\n  virtual IHuman* CreateHuman() = 0;\n\n};\n\n\nclass WhiteHumanFactory: public IHumanFactory\n{\npublic:\n  WhiteHumanFactory(void)\n  {\n\n  }\n  ~WhiteHumanFactory(void)\n  {\n\n  }\n  IHuman *CreateHuman()\n  {\n    return new WhiteHuman();\n  }\n\n};\n\nclass YellowHumanFactory: public IHumanFactory\n{\npublic:\n  YellowHumanFactory(void)\n  {\n\n  }\n  ~YellowHumanFactory(void)\n  {\n\n  }\n  IHuman *CreateHuman()\n  {\n    return new YellowHuman();\n  }\n\n};\n\nclass BlackHumanFactory: public IHumanFactory\n{\npublic:\n  BlackHumanFactory(void)\n  {\n\n  }\n  ~BlackHumanFactory(void)\n  {\n\n  }\n  IHuman *CreateHuman()\n  {\n    return new BlackHuman();\n  }\n\n};\n\n\nint main()\n{\n  std::cout << \"#1.制造黄种人\"<<std::endl;\n  IHumanFactory *pHumanFactory = new YellowHumanFactory();\n  IHuman * pHuman = pHumanFactory->CreateHuman();\n  pHuman->Cry();\n  pHuman->Laugh();\n  pHuman->Talk();\n  delete pHuman;\n  delete pHumanFactory;\n\n  std::cout << \"#1.制造白种人\"<<std::endl;\n  IHumanFactory *pHumanFactory2 = new WhiteHumanFactory();\n  IHuman * pHuman2 = pHumanFactory->CreateHuman();\n  pHuman->Cry();\n  pHuman->Laugh();\n  pHuman->Talk();\n  delete pHuman2;\n  delete pHumanFactory2;\n\n  std::cout << \"#1.制造黑种人\"<<std::endl;\n  IHumanFactory *pHumanFactory3 = new BlackHumanFactory();\n  IHuman * pHuman3 = pHumanFactory->CreateHuman();\n  pHuman->Cry();\n  pHuman->Laugh();\n  pHuman->Talk();\n  delete pHuman3;\n  delete pHumanFactory3;\n\n  getchar();\n  return 0;\n\n}\n```\n\n\n## 参考\n\n* [c++工厂模式 (Factory method)](https://www.cnblogs.com/onlycxue/p/3428075.html)\n* [C++设计模式之工厂方法模式（Factory Method）](https://blog.csdn.net/hahaha777527/article/details/50965621)","slug":"c-工厂模式","published":1,"layout":"post","photos":[],"link":"","_id":"cjlsnrrkl0006ly0lo9u0twnk","content":"<blockquote>\n<p>本文描述了c++工厂模式基本概念和一个例子。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ul>\n<li>定义一个用于创建对象的接口，让子类决定实例化哪一个类。Factory Method使一个类的实例化延迟到其子类。又叫虚拟构造子（Virtual Constructor）模式或者多态性工厂（Polymorphic Factory）模式。 </li>\n<li>工厂模式的好处：工厂模式就相当于创建实例对象的new。工厂模式也是用来创建实例对象的，可能多做一些工作，但会给你系统带来更大的可扩展性和尽量少的修改量。</li>\n<li>通常我们都要在创建sample实例时做点初始化的工作。</li>\n<li>需要将创建实例的工作与使用实例的工作分开, 也就是说，让创建实例所需要的大量初始化工作从Sample的构造函数中分离出去。</li>\n<li>工厂模式是一个创建性的模式，他要求工厂类和产品类分开，由一个工厂类可以根据传入的参量决定创建出哪一种产品类的实例。但这些不同的实例有共同的父类</li>\n</ul>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><ul>\n<li>文件：<code>main.cpp</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IHuman</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  IHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~IHuman()</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">Laugh</span><span class=\"params\">()</span> </span>= <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">Cry</span><span class=\"params\">()</span> </span>= <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">Talk</span><span class=\"params\">()</span> </span>= <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WhiteHuman</span> :</span> <span class=\"keyword\">public</span> IHuman</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  WhiteHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~WhiteHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Laugh</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"白种人笑！\"</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Cry</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"白种人哭！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Talk</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"白种人说话！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">YellowHuman</span> :</span> <span class=\"keyword\">public</span> IHuman</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  YellowHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~YellowHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Laugh</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黄种人笑！\"</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Cry</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黄种人哭！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Talk</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黄种人说话！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlackHuman</span> :</span> <span class=\"keyword\">public</span> IHuman</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  BlackHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~BlackHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Laugh</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黑种人笑！\"</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Cry</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黑种人哭！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Talk</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黑种人说话！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IHumanFactory</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  IHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~IHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> IHuman* <span class=\"title\">CreateHuman</span><span class=\"params\">()</span> </span>= <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WhiteHumanFactory</span>:</span> <span class=\"keyword\">public</span> IHumanFactory</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  WhiteHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~WhiteHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\">IHuman *<span class=\"title\">CreateHuman</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> WhiteHuman();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">YellowHumanFactory</span>:</span> <span class=\"keyword\">public</span> IHumanFactory</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  YellowHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~YellowHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\">IHuman *<span class=\"title\">CreateHuman</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> YellowHuman();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlackHumanFactory</span>:</span> <span class=\"keyword\">public</span> IHumanFactory</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  BlackHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~BlackHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\">IHuman *<span class=\"title\">CreateHuman</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> BlackHuman();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"#1.制造黄种人\"</span>&lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  IHumanFactory *pHumanFactory = <span class=\"keyword\">new</span> YellowHumanFactory();</span><br><span class=\"line\">  IHuman * pHuman = pHumanFactory-&gt;CreateHuman();</span><br><span class=\"line\">  pHuman-&gt;Cry();</span><br><span class=\"line\">  pHuman-&gt;Laugh();</span><br><span class=\"line\">  pHuman-&gt;Talk();</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHuman;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHumanFactory;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"#1.制造白种人\"</span>&lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  IHumanFactory *pHumanFactory2 = <span class=\"keyword\">new</span> WhiteHumanFactory();</span><br><span class=\"line\">  IHuman * pHuman2 = pHumanFactory-&gt;CreateHuman();</span><br><span class=\"line\">  pHuman-&gt;Cry();</span><br><span class=\"line\">  pHuman-&gt;Laugh();</span><br><span class=\"line\">  pHuman-&gt;Talk();</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHuman2;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHumanFactory2;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"#1.制造黑种人\"</span>&lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  IHumanFactory *pHumanFactory3 = <span class=\"keyword\">new</span> BlackHumanFactory();</span><br><span class=\"line\">  IHuman * pHuman3 = pHumanFactory-&gt;CreateHuman();</span><br><span class=\"line\">  pHuman-&gt;Cry();</span><br><span class=\"line\">  pHuman-&gt;Laugh();</span><br><span class=\"line\">  pHuman-&gt;Talk();</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHuman3;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHumanFactory3;</span><br><span class=\"line\"></span><br><span class=\"line\">  getchar();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.cnblogs.com/onlycxue/p/3428075.html\" target=\"_blank\" rel=\"noopener\">c++工厂模式 (Factory method)</a></li>\n<li><a href=\"https://blog.csdn.net/hahaha777527/article/details/50965621\" target=\"_blank\" rel=\"noopener\">C++设计模式之工厂方法模式（Factory Method）</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文描述了c++工厂模式基本概念和一个例子。<br>","more":"</p>\n</blockquote>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ul>\n<li>定义一个用于创建对象的接口，让子类决定实例化哪一个类。Factory Method使一个类的实例化延迟到其子类。又叫虚拟构造子（Virtual Constructor）模式或者多态性工厂（Polymorphic Factory）模式。 </li>\n<li>工厂模式的好处：工厂模式就相当于创建实例对象的new。工厂模式也是用来创建实例对象的，可能多做一些工作，但会给你系统带来更大的可扩展性和尽量少的修改量。</li>\n<li>通常我们都要在创建sample实例时做点初始化的工作。</li>\n<li>需要将创建实例的工作与使用实例的工作分开, 也就是说，让创建实例所需要的大量初始化工作从Sample的构造函数中分离出去。</li>\n<li>工厂模式是一个创建性的模式，他要求工厂类和产品类分开，由一个工厂类可以根据传入的参量决定创建出哪一种产品类的实例。但这些不同的实例有共同的父类</li>\n</ul>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><ul>\n<li>文件：<code>main.cpp</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IHuman</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  IHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~IHuman()</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">Laugh</span><span class=\"params\">()</span> </span>= <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">Cry</span><span class=\"params\">()</span> </span>= <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">Talk</span><span class=\"params\">()</span> </span>= <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WhiteHuman</span> :</span> <span class=\"keyword\">public</span> IHuman</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  WhiteHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~WhiteHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Laugh</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"白种人笑！\"</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Cry</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"白种人哭！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Talk</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"白种人说话！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">YellowHuman</span> :</span> <span class=\"keyword\">public</span> IHuman</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  YellowHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~YellowHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Laugh</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黄种人笑！\"</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Cry</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黄种人哭！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Talk</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黄种人说话！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlackHuman</span> :</span> <span class=\"keyword\">public</span> IHuman</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  BlackHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~BlackHuman(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Laugh</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黑种人笑！\"</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Cry</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黑种人哭！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Talk</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"黑种人说话！\"</span> &lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IHumanFactory</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  IHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~IHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> IHuman* <span class=\"title\">CreateHuman</span><span class=\"params\">()</span> </span>= <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WhiteHumanFactory</span>:</span> <span class=\"keyword\">public</span> IHumanFactory</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  WhiteHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~WhiteHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\">IHuman *<span class=\"title\">CreateHuman</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> WhiteHuman();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">YellowHumanFactory</span>:</span> <span class=\"keyword\">public</span> IHumanFactory</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  YellowHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~YellowHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\">IHuman *<span class=\"title\">CreateHuman</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> YellowHuman();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlackHumanFactory</span>:</span> <span class=\"keyword\">public</span> IHumanFactory</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  BlackHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ~BlackHumanFactory(<span class=\"keyword\">void</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\">IHuman *<span class=\"title\">CreateHuman</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> BlackHuman();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"#1.制造黄种人\"</span>&lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  IHumanFactory *pHumanFactory = <span class=\"keyword\">new</span> YellowHumanFactory();</span><br><span class=\"line\">  IHuman * pHuman = pHumanFactory-&gt;CreateHuman();</span><br><span class=\"line\">  pHuman-&gt;Cry();</span><br><span class=\"line\">  pHuman-&gt;Laugh();</span><br><span class=\"line\">  pHuman-&gt;Talk();</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHuman;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHumanFactory;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"#1.制造白种人\"</span>&lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  IHumanFactory *pHumanFactory2 = <span class=\"keyword\">new</span> WhiteHumanFactory();</span><br><span class=\"line\">  IHuman * pHuman2 = pHumanFactory-&gt;CreateHuman();</span><br><span class=\"line\">  pHuman-&gt;Cry();</span><br><span class=\"line\">  pHuman-&gt;Laugh();</span><br><span class=\"line\">  pHuman-&gt;Talk();</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHuman2;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHumanFactory2;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"#1.制造黑种人\"</span>&lt;&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  IHumanFactory *pHumanFactory3 = <span class=\"keyword\">new</span> BlackHumanFactory();</span><br><span class=\"line\">  IHuman * pHuman3 = pHumanFactory-&gt;CreateHuman();</span><br><span class=\"line\">  pHuman-&gt;Cry();</span><br><span class=\"line\">  pHuman-&gt;Laugh();</span><br><span class=\"line\">  pHuman-&gt;Talk();</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHuman3;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pHumanFactory3;</span><br><span class=\"line\"></span><br><span class=\"line\">  getchar();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.cnblogs.com/onlycxue/p/3428075.html\" target=\"_blank\" rel=\"noopener\">c++工厂模式 (Factory method)</a></li>\n<li><a href=\"https://blog.csdn.net/hahaha777527/article/details/50965621\" target=\"_blank\" rel=\"noopener\">C++设计模式之工厂方法模式（Factory Method）</a></li>\n</ul>"},{"title":"python-pip更改国内镜像","comments":1,"updated":"2018-09-07T23:54:36.646Z","author":"张学志","date":"2018-04-18T10:20:00.000Z","_content":"> 本文描述了如何在linux上为python配置国内镜像源。\n<!-- more -->\n\n\n## 概述\n* 更改国内镜像源的原因：\n\t* 访问国外镜像速度太慢\n\t\n* 常见的国内镜像源有两个：\n\t* [豆瓣](http://pypi.douban.com/simple/)\n\t* [清华](https://pypi.tuna.tsinghua.edu.cn/simple)\n\n* 推荐清华镜像源，因为我之前遇到有的包在豆瓣镜像上没装成功，换成清华镜像源之后，成功地安装了。\n\n\n## 配置\n\n* linux下，修改 `~/.pip/pip.con`f (没有就创建一个)， 修改 index-url至tuna，内容如下：\n```\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n## 参考：\n* [更改pip源至国内镜像，显著提升下载速度](https://blog.csdn.net/lambert310/article/details/52412059)\n","source":"_posts/python-pip更改国内镜像.md","raw":"title: python-pip更改国内镜像\ntags:\n  - python\n  - 编程\ncategories:\n  - python\n  - ''\ncomments: true\nupdated: false\nauthor: 张学志\ndate: 2018-04-18 18:20:00\n---\n> 本文描述了如何在linux上为python配置国内镜像源。\n<!-- more -->\n\n\n## 概述\n* 更改国内镜像源的原因：\n\t* 访问国外镜像速度太慢\n\t\n* 常见的国内镜像源有两个：\n\t* [豆瓣](http://pypi.douban.com/simple/)\n\t* [清华](https://pypi.tuna.tsinghua.edu.cn/simple)\n\n* 推荐清华镜像源，因为我之前遇到有的包在豆瓣镜像上没装成功，换成清华镜像源之后，成功地安装了。\n\n\n## 配置\n\n* linux下，修改 `~/.pip/pip.con`f (没有就创建一个)， 修改 index-url至tuna，内容如下：\n```\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n## 参考：\n* [更改pip源至国内镜像，显著提升下载速度](https://blog.csdn.net/lambert310/article/details/52412059)\n","slug":"python-pip更改国内镜像","published":1,"layout":"post","photos":[],"link":"","_id":"cjlsnrrl50008ly0ly2yjioyh","content":"<blockquote>\n<p>本文描述了如何在linux上为python配置国内镜像源。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><ul>\n<li><p>更改国内镜像源的原因：</p>\n<ul>\n<li>访问国外镜像速度太慢</li>\n</ul>\n</li>\n<li><p>常见的国内镜像源有两个：</p>\n<ul>\n<li><a href=\"http://pypi.douban.com/simple/\" target=\"_blank\" rel=\"noopener\">豆瓣</a></li>\n<li><a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\" target=\"_blank\" rel=\"noopener\">清华</a></li>\n</ul>\n</li>\n<li><p>推荐清华镜像源，因为我之前遇到有的包在豆瓣镜像上没装成功，换成清华镜像源之后，成功地安装了。</p>\n</li>\n</ul>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ul>\n<li>linux下，修改 <code>~/.pip/pip.con</code>f (没有就创建一个)， 修改 index-url至tuna，内容如下：<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"keyword\">global</span>]</span><br><span class=\"line\"><span class=\"built_in\">index</span>-url = http<span class=\"variable\">s:</span>//pypi.tuna.tsinghua.edu.<span class=\"keyword\">cn</span>/simple</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h2><ul>\n<li><a href=\"https://blog.csdn.net/lambert310/article/details/52412059\" target=\"_blank\" rel=\"noopener\">更改pip源至国内镜像，显著提升下载速度</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文描述了如何在linux上为python配置国内镜像源。<br>","more":"</p>\n</blockquote>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><ul>\n<li><p>更改国内镜像源的原因：</p>\n<ul>\n<li>访问国外镜像速度太慢</li>\n</ul>\n</li>\n<li><p>常见的国内镜像源有两个：</p>\n<ul>\n<li><a href=\"http://pypi.douban.com/simple/\" target=\"_blank\" rel=\"noopener\">豆瓣</a></li>\n<li><a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\" target=\"_blank\" rel=\"noopener\">清华</a></li>\n</ul>\n</li>\n<li><p>推荐清华镜像源，因为我之前遇到有的包在豆瓣镜像上没装成功，换成清华镜像源之后，成功地安装了。</p>\n</li>\n</ul>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ul>\n<li>linux下，修改 <code>~/.pip/pip.con</code>f (没有就创建一个)， 修改 index-url至tuna，内容如下：<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"keyword\">global</span>]</span><br><span class=\"line\"><span class=\"built_in\">index</span>-url = http<span class=\"variable\">s:</span>//pypi.tuna.tsinghua.edu.<span class=\"keyword\">cn</span>/simple</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h2><ul>\n<li><a href=\"https://blog.csdn.net/lambert310/article/details/52412059\" target=\"_blank\" rel=\"noopener\">更改pip源至国内镜像，显著提升下载速度</a></li>\n</ul>"},{"title":"python-为Python添加默认模块搜索路径","comments":1,"updated":"2018-09-07T23:54:36.642Z","author":"张学志","date":"2018-04-21T15:01:36.000Z","_content":"> 本文描述了3种**为Python添加模块搜索路径**的方法。\n<!-- more -->\n\n\n\n## 概述\n\n* 总共有三种方法：①函数添加；②修改环境变量；③增加.pth文件。\n\n## 一、函数添加\n\n* 在`Python`中或Python文件中执行以下语句，将`/home/xuezhi.zhang/libs`添加到Python搜索目录中。\n\n```\nimport sys\nprint sys.path\nsys.path.append(\"/home/xuezhi.zhang/libs\")\n```\n\n## 二、修改环境变量\n\n* 用户可以通过修改环境变量PYTHONPATH来添加Python搜索目录。\n* 将以下内容放到`~/.bashrc`中，并执行`source ~/.bashrc`使设置生效。\n* 作用：将`${HOME}/workspace/mxnet/python`添加到Python搜索目录。\n\n```\nexport PYTHONPATH=${PYTHONPATH}:${HOME}/workspace/mxnet/python\n```\n\n## 三、增加.pth文件\n\n* 在site-packages目录中添加一个路径文件（如mypkpath.pth）。**注意：必须以.pth为后缀**。将你要加入的模块文件所在的目录名称写入该文件即可。\n\n## 参考\n* [为Python添加默认模块搜索路径](https://www.cnblogs.com/shanql/articles/5477483.html)\n   \n\n","source":"_posts/python-为Python添加默认模块搜索路径.md","raw":"title: python-为Python添加默认模块搜索路径\ntags:\n  - python\n  - 编程\ncategories:\n  - python\ncomments: true\nupdated: false\nauthor: 张学志\ndate: 2018-04-21 23:01:36\n---\n> 本文描述了3种**为Python添加模块搜索路径**的方法。\n<!-- more -->\n\n\n\n## 概述\n\n* 总共有三种方法：①函数添加；②修改环境变量；③增加.pth文件。\n\n## 一、函数添加\n\n* 在`Python`中或Python文件中执行以下语句，将`/home/xuezhi.zhang/libs`添加到Python搜索目录中。\n\n```\nimport sys\nprint sys.path\nsys.path.append(\"/home/xuezhi.zhang/libs\")\n```\n\n## 二、修改环境变量\n\n* 用户可以通过修改环境变量PYTHONPATH来添加Python搜索目录。\n* 将以下内容放到`~/.bashrc`中，并执行`source ~/.bashrc`使设置生效。\n* 作用：将`${HOME}/workspace/mxnet/python`添加到Python搜索目录。\n\n```\nexport PYTHONPATH=${PYTHONPATH}:${HOME}/workspace/mxnet/python\n```\n\n## 三、增加.pth文件\n\n* 在site-packages目录中添加一个路径文件（如mypkpath.pth）。**注意：必须以.pth为后缀**。将你要加入的模块文件所在的目录名称写入该文件即可。\n\n## 参考\n* [为Python添加默认模块搜索路径](https://www.cnblogs.com/shanql/articles/5477483.html)\n   \n\n","slug":"python-为Python添加默认模块搜索路径","published":1,"layout":"post","photos":[],"link":"","_id":"cjlsnrrlw000aly0lnofdkw3p","content":"<blockquote>\n<p>本文描述了3种<strong>为Python添加模块搜索路径</strong>的方法。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><ul>\n<li>总共有三种方法：①函数添加；②修改环境变量；③增加.pth文件。</li>\n</ul>\n<h2 id=\"一、函数添加\"><a href=\"#一、函数添加\" class=\"headerlink\" title=\"一、函数添加\"></a>一、函数添加</h2><ul>\n<li>在<code>Python</code>中或Python文件中执行以下语句，将<code>/home/xuezhi.zhang/libs</code>添加到Python搜索目录中。</li>\n</ul>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import sys</span><br><span class=\"line\">print sys.path</span><br><span class=\"line\">sys<span class=\"selector-class\">.path</span><span class=\"selector-class\">.append</span>(<span class=\"string\">\"/home/xuezhi.zhang/libs\"</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、修改环境变量\"><a href=\"#二、修改环境变量\" class=\"headerlink\" title=\"二、修改环境变量\"></a>二、修改环境变量</h2><ul>\n<li>用户可以通过修改环境变量PYTHONPATH来添加Python搜索目录。</li>\n<li>将以下内容放到<code>~/.bashrc</code>中，并执行<code>source ~/.bashrc</code>使设置生效。</li>\n<li>作用：将<code>${HOME}/workspace/mxnet/python</code>添加到Python搜索目录。</li>\n</ul>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PYTHONPATH</span>=<span class=\"variable\">$&#123;PYTHONPATH&#125;</span>:$&#123;HOME&#125;/workspace/mxnet/python</span><br></pre></td></tr></table></figure>\n<h2 id=\"三、增加-pth文件\"><a href=\"#三、增加-pth文件\" class=\"headerlink\" title=\"三、增加.pth文件\"></a>三、增加.pth文件</h2><ul>\n<li>在site-packages目录中添加一个路径文件（如mypkpath.pth）。<strong>注意：必须以.pth为后缀</strong>。将你要加入的模块文件所在的目录名称写入该文件即可。</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.cnblogs.com/shanql/articles/5477483.html\" target=\"_blank\" rel=\"noopener\">为Python添加默认模块搜索路径</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文描述了3种<strong>为Python添加模块搜索路径</strong>的方法。<br>","more":"</p>\n</blockquote>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><ul>\n<li>总共有三种方法：①函数添加；②修改环境变量；③增加.pth文件。</li>\n</ul>\n<h2 id=\"一、函数添加\"><a href=\"#一、函数添加\" class=\"headerlink\" title=\"一、函数添加\"></a>一、函数添加</h2><ul>\n<li>在<code>Python</code>中或Python文件中执行以下语句，将<code>/home/xuezhi.zhang/libs</code>添加到Python搜索目录中。</li>\n</ul>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import sys</span><br><span class=\"line\">print sys.path</span><br><span class=\"line\">sys<span class=\"selector-class\">.path</span><span class=\"selector-class\">.append</span>(<span class=\"string\">\"/home/xuezhi.zhang/libs\"</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、修改环境变量\"><a href=\"#二、修改环境变量\" class=\"headerlink\" title=\"二、修改环境变量\"></a>二、修改环境变量</h2><ul>\n<li>用户可以通过修改环境变量PYTHONPATH来添加Python搜索目录。</li>\n<li>将以下内容放到<code>~/.bashrc</code>中，并执行<code>source ~/.bashrc</code>使设置生效。</li>\n<li>作用：将<code>${HOME}/workspace/mxnet/python</code>添加到Python搜索目录。</li>\n</ul>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">export</span> <span class=\"attribute\">PYTHONPATH</span>=<span class=\"variable\">$&#123;PYTHONPATH&#125;</span>:$&#123;HOME&#125;/workspace/mxnet/python</span><br></pre></td></tr></table></figure>\n<h2 id=\"三、增加-pth文件\"><a href=\"#三、增加-pth文件\" class=\"headerlink\" title=\"三、增加.pth文件\"></a>三、增加.pth文件</h2><ul>\n<li>在site-packages目录中添加一个路径文件（如mypkpath.pth）。<strong>注意：必须以.pth为后缀</strong>。将你要加入的模块文件所在的目录名称写入该文件即可。</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.cnblogs.com/shanql/articles/5477483.html\" target=\"_blank\" rel=\"noopener\">为Python添加默认模块搜索路径</a></li>\n</ul>"},{"title":"python-让jupyter notebook支持python3","comments":1,"updated":"2018-09-07T23:54:36.634Z","author":"张学志","date":"2018-04-24T14:02:00.000Z","_content":"> 本文描述了如何让jupyter notebook支持python3\n<!-- more -->\n\n* 安装完jupyter notebook之后，默认只支持python2。\n* 其实jupyter还支持非常多的编程语言。点击[jupyter kernels list](https://github.com/jupyter/jupyter/wiki/Jupyter-kernels)查看jupyter支持哪些语言。\n\n## 支持Python 3\n\n* 命令行执行下面的命令\n\n```\npip3 install ipykernel\npython3 -m ipykernel install\n```\n\n* 重启jupyter\n\n```\njupyter notebook \n```\n\n* 此时，发现可以新建python3的notebook了。\n\n## 参考\n\n* [如何让Jupyter Notebook支持多种编程语言？](https://www.jianshu.com/p/8b90c2f12856)","source":"_posts/python-让jupyter-notebook支持python3.md","raw":"title: python-让jupyter notebook支持python3\ntags:\n  - python\n  - ''\ncategories:\n  - python\n  - ''\ncomments: true\nupdated: false\nauthor: 张学志\ndate: 2018-04-24 22:02:00\n---\n> 本文描述了如何让jupyter notebook支持python3\n<!-- more -->\n\n* 安装完jupyter notebook之后，默认只支持python2。\n* 其实jupyter还支持非常多的编程语言。点击[jupyter kernels list](https://github.com/jupyter/jupyter/wiki/Jupyter-kernels)查看jupyter支持哪些语言。\n\n## 支持Python 3\n\n* 命令行执行下面的命令\n\n```\npip3 install ipykernel\npython3 -m ipykernel install\n```\n\n* 重启jupyter\n\n```\njupyter notebook \n```\n\n* 此时，发现可以新建python3的notebook了。\n\n## 参考\n\n* [如何让Jupyter Notebook支持多种编程语言？](https://www.jianshu.com/p/8b90c2f12856)","slug":"python-让jupyter-notebook支持python3","published":1,"layout":"post","photos":[],"link":"","_id":"cjlsnrrmq000dly0lpm1e4nrc","content":"<blockquote>\n<p>本文描述了如何让jupyter notebook支持python3<br><a id=\"more\"></a></p>\n</blockquote>\n<ul>\n<li>安装完jupyter notebook之后，默认只支持python2。</li>\n<li>其实jupyter还支持非常多的编程语言。点击<a href=\"https://github.com/jupyter/jupyter/wiki/Jupyter-kernels\" target=\"_blank\" rel=\"noopener\">jupyter kernels list</a>查看jupyter支持哪些语言。</li>\n</ul>\n<h2 id=\"支持Python-3\"><a href=\"#支持Python-3\" class=\"headerlink\" title=\"支持Python 3\"></a>支持Python 3</h2><ul>\n<li>命令行执行下面的命令</li>\n</ul>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 <span class=\"keyword\">install</span> ipykernel</span><br><span class=\"line\">python3 -m ipykernel <span class=\"keyword\">install</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>重启jupyter</li>\n</ul>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">jupyter notebook</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>此时，发现可以新建python3的notebook了。</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.jianshu.com/p/8b90c2f12856\" target=\"_blank\" rel=\"noopener\">如何让Jupyter Notebook支持多种编程语言？</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文描述了如何让jupyter notebook支持python3<br>","more":"</p>\n</blockquote>\n<ul>\n<li>安装完jupyter notebook之后，默认只支持python2。</li>\n<li>其实jupyter还支持非常多的编程语言。点击<a href=\"https://github.com/jupyter/jupyter/wiki/Jupyter-kernels\" target=\"_blank\" rel=\"noopener\">jupyter kernels list</a>查看jupyter支持哪些语言。</li>\n</ul>\n<h2 id=\"支持Python-3\"><a href=\"#支持Python-3\" class=\"headerlink\" title=\"支持Python 3\"></a>支持Python 3</h2><ul>\n<li>命令行执行下面的命令</li>\n</ul>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 <span class=\"keyword\">install</span> ipykernel</span><br><span class=\"line\">python3 -m ipykernel <span class=\"keyword\">install</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>重启jupyter</li>\n</ul>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">jupyter notebook</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>此时，发现可以新建python3的notebook了。</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.jianshu.com/p/8b90c2f12856\" target=\"_blank\" rel=\"noopener\">如何让Jupyter Notebook支持多种编程语言？</a></li>\n</ul>"},{"title":"testing","comments":1,"updated":"2018-09-07T23:54:36.670Z","author":"张学志","date":"2018-04-14T10:20:00.000Z","_content":"> 本文描述了单例模式的基本概念和一个例子。\n<!-- more -->\n\n## 基本概念\n* Singleton 是对全局变量的取代策略。\n* 作用：保证一个类只能有一个实例，并提供一个全局唯一的访问点。\n\t* 仅有一个实例：通过类的静态成员变量来体现。\n\t* 提供访问它的全局访问点：访问静态成员变量的静态成员函数来体现。\n* 定义一个单例类，使用类的私有静态指针变量指向类的唯一实例，并用一个公有的静态方法获取该实例。\n* 唯一实例类Singleton在静态成员函数中隐藏创建实例的操作。\n* 特征：\n\t* 它有一个指向唯一实例的静态指针，并且是私有的；\n\t* 它有一个公有的函数，可以获取这个唯一的实例，并且在需要的时候创建该实例；\n\t* 它的构造函数是私有的，这样就不能从别处创建该类的实例。\n\n\n## 例子\n\n* 单例类的头文件：`Singleton.h`\n\n```\n//\n// Created by xuezhi.zhang on 4/15/18.\n//\n\n#ifndef _SINGLETON_H_\n#define _SINGLETON_H_\n\nclass Singleton{\nprivate:\n  static Singleton* pInstance; //静态成员，保存对象的唯一实例\n  Singleton(); //私有化构造函数，使其无法在类外实例化\npublic:\n  static Singleton* Instance();\n  static void Destroy();\n};\n\n#endif //UNTITLED_SINGLETON_H\n\n```\n\n* 单例类的实现文件：`Singleton.pp`\n\n```\n//\n// Created by xuezhi.zhang on 4/15/18.\n//\n#include <iostream>\n#include \"Singleton.h\"\n\nusing namespace std;\n\nSingleton* Singleton::pInstance = NULL;\n\n\nSingleton::Singleton() {\n  cout << \"Singleton...\" << endl;\n}\n\n\nSingleton* Singleton::Instance() {\n  if (NULL == pInstance)\n    pInstance = new Singleton();\n  return pInstance;\n}\n\n\nvoid Singleton::Destroy() {\n  delete pInstance;\n  pInstance = NULL;\n  cout << \"Destroy...\" << endl;\n}\n\n\n```\n\n* 调用文件：`main.h`\n\n\n```\n#include <iostream>\n#include \"Singleton.h\"\n\nusing namespace std;\n\nint main()\n{\n  Singleton* ps = Singleton::Instance();\n  Singleton::Destroy();\n\n  return 0;\n}\n```\n\n\n## 参考\n* [C++设计模式-Singleton](https://www.cnblogs.com/jiese/p/3158517.html)\n","source":"_posts/test.md","raw":"title: testing\ntags:\n  - c++\n  - 编程\ncategories:\n  - c++\n  - ''\ncomments: true\nupdated: false\nauthor: 张学志\ndate: 2018-04-14 18:20:00\n---\n> 本文描述了单例模式的基本概念和一个例子。\n<!-- more -->\n\n## 基本概念\n* Singleton 是对全局变量的取代策略。\n* 作用：保证一个类只能有一个实例，并提供一个全局唯一的访问点。\n\t* 仅有一个实例：通过类的静态成员变量来体现。\n\t* 提供访问它的全局访问点：访问静态成员变量的静态成员函数来体现。\n* 定义一个单例类，使用类的私有静态指针变量指向类的唯一实例，并用一个公有的静态方法获取该实例。\n* 唯一实例类Singleton在静态成员函数中隐藏创建实例的操作。\n* 特征：\n\t* 它有一个指向唯一实例的静态指针，并且是私有的；\n\t* 它有一个公有的函数，可以获取这个唯一的实例，并且在需要的时候创建该实例；\n\t* 它的构造函数是私有的，这样就不能从别处创建该类的实例。\n\n\n## 例子\n\n* 单例类的头文件：`Singleton.h`\n\n```\n//\n// Created by xuezhi.zhang on 4/15/18.\n//\n\n#ifndef _SINGLETON_H_\n#define _SINGLETON_H_\n\nclass Singleton{\nprivate:\n  static Singleton* pInstance; //静态成员，保存对象的唯一实例\n  Singleton(); //私有化构造函数，使其无法在类外实例化\npublic:\n  static Singleton* Instance();\n  static void Destroy();\n};\n\n#endif //UNTITLED_SINGLETON_H\n\n```\n\n* 单例类的实现文件：`Singleton.pp`\n\n```\n//\n// Created by xuezhi.zhang on 4/15/18.\n//\n#include <iostream>\n#include \"Singleton.h\"\n\nusing namespace std;\n\nSingleton* Singleton::pInstance = NULL;\n\n\nSingleton::Singleton() {\n  cout << \"Singleton...\" << endl;\n}\n\n\nSingleton* Singleton::Instance() {\n  if (NULL == pInstance)\n    pInstance = new Singleton();\n  return pInstance;\n}\n\n\nvoid Singleton::Destroy() {\n  delete pInstance;\n  pInstance = NULL;\n  cout << \"Destroy...\" << endl;\n}\n\n\n```\n\n* 调用文件：`main.h`\n\n\n```\n#include <iostream>\n#include \"Singleton.h\"\n\nusing namespace std;\n\nint main()\n{\n  Singleton* ps = Singleton::Instance();\n  Singleton::Destroy();\n\n  return 0;\n}\n```\n\n\n## 参考\n* [C++设计模式-Singleton](https://www.cnblogs.com/jiese/p/3158517.html)\n","slug":"test","published":1,"layout":"post","photos":[],"link":"","_id":"cjlsnrrnd000ely0lnrqf7lzn","content":"<blockquote>\n<p>本文描述了单例模式的基本概念和一个例子。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ul>\n<li>Singleton 是对全局变量的取代策略。</li>\n<li>作用：保证一个类只能有一个实例，并提供一个全局唯一的访问点。<ul>\n<li>仅有一个实例：通过类的静态成员变量来体现。</li>\n<li>提供访问它的全局访问点：访问静态成员变量的静态成员函数来体现。</li>\n</ul>\n</li>\n<li>定义一个单例类，使用类的私有静态指针变量指向类的唯一实例，并用一个公有的静态方法获取该实例。</li>\n<li>唯一实例类Singleton在静态成员函数中隐藏创建实例的操作。</li>\n<li>特征：<ul>\n<li>它有一个指向唯一实例的静态指针，并且是私有的；</li>\n<li>它有一个公有的函数，可以获取这个唯一的实例，并且在需要的时候创建该实例；</li>\n<li>它的构造函数是私有的，这样就不能从别处创建该类的实例。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><ul>\n<li>单例类的头文件：<code>Singleton.h</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by xuezhi.zhang on 4/15/18.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _SINGLETON_H_</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _SINGLETON_H_</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton</span>&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"keyword\">static</span> Singleton* pInstance; <span class=\"comment\">//静态成员，保存对象的唯一实例</span></span><br><span class=\"line\">  Singleton(); <span class=\"comment\">//私有化构造函数，使其无法在类外实例化</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> Singleton* <span class=\"title\">Instance</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Destroy</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">//UNTITLED_SINGLETON_H</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>单例类的实现文件：<code>Singleton.pp</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by xuezhi.zhang on 4/15/18.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Singleton.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Singleton* Singleton::pInstance = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Singleton::Singleton() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Singleton...\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Singleton* Singleton::Instance() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == pInstance)</span><br><span class=\"line\">    pInstance = <span class=\"keyword\">new</span> Singleton();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pInstance;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> Singleton::Destroy() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pInstance;</span><br><span class=\"line\">  pInstance = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Destroy...\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>调用文件：<code>main.h</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Singleton.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  Singleton* ps = Singleton::Instance();</span><br><span class=\"line\">  Singleton::Destroy();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.cnblogs.com/jiese/p/3158517.html\" target=\"_blank\" rel=\"noopener\">C++设计模式-Singleton</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文描述了单例模式的基本概念和一个例子。<br>","more":"</p>\n</blockquote>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ul>\n<li>Singleton 是对全局变量的取代策略。</li>\n<li>作用：保证一个类只能有一个实例，并提供一个全局唯一的访问点。<ul>\n<li>仅有一个实例：通过类的静态成员变量来体现。</li>\n<li>提供访问它的全局访问点：访问静态成员变量的静态成员函数来体现。</li>\n</ul>\n</li>\n<li>定义一个单例类，使用类的私有静态指针变量指向类的唯一实例，并用一个公有的静态方法获取该实例。</li>\n<li>唯一实例类Singleton在静态成员函数中隐藏创建实例的操作。</li>\n<li>特征：<ul>\n<li>它有一个指向唯一实例的静态指针，并且是私有的；</li>\n<li>它有一个公有的函数，可以获取这个唯一的实例，并且在需要的时候创建该实例；</li>\n<li>它的构造函数是私有的，这样就不能从别处创建该类的实例。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><ul>\n<li>单例类的头文件：<code>Singleton.h</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by xuezhi.zhang on 4/15/18.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _SINGLETON_H_</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _SINGLETON_H_</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton</span>&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"keyword\">static</span> Singleton* pInstance; <span class=\"comment\">//静态成员，保存对象的唯一实例</span></span><br><span class=\"line\">  Singleton(); <span class=\"comment\">//私有化构造函数，使其无法在类外实例化</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> Singleton* <span class=\"title\">Instance</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Destroy</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">//UNTITLED_SINGLETON_H</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>单例类的实现文件：<code>Singleton.pp</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by xuezhi.zhang on 4/15/18.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Singleton.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Singleton* Singleton::pInstance = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Singleton::Singleton() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Singleton...\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Singleton* Singleton::Instance() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == pInstance)</span><br><span class=\"line\">    pInstance = <span class=\"keyword\">new</span> Singleton();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pInstance;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> Singleton::Destroy() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> pInstance;</span><br><span class=\"line\">  pInstance = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Destroy...\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>调用文件：<code>main.h</code></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Singleton.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  Singleton* ps = Singleton::Instance();</span><br><span class=\"line\">  Singleton::Destroy();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.cnblogs.com/jiese/p/3158517.html\" target=\"_blank\" rel=\"noopener\">C++设计模式-Singleton</a></li>\n</ul>"},{"title":"使用shadowsocksR访问google scholar","comments":1,"updated":"2018-09-07T23:54:36.654Z","author":"张学志","date":"2018-04-13T12:32:00.000Z","_content":"> 本文描述了如何在windows下，使用shadowsocks，SwitchyOmega和chrome实现访问google scholar等网站。\n<!-- more -->\n## 获取shadowsocksR账号\n* 获取的方法有以下几种：\n\t* 网上搜索免费账号\n\t* 网上购买shadowsocksR账号\n\t* 网上购买vps，自行搭建shadowsocksR服务器\n\n* 推荐第三种：购买vps，自己搭建。\n\n* VPS推荐，10$左右/年  [alpharacks](https://www.alpharacks.com)\n* [一键安装脚本](https://github.com/iMeiji/shadowsocks_install/wiki/shadowsocksR-%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85)\n* [BBR加速](https://www.dz9.net/blog/4246.html)\n\n\n## 安装shadowsocksR\n* 下载。[下载地址](https://github.com/xuezhisd/ShadowsocksR-4.1.5-win/)\n* 安装。\n* 配置。将上一步得到的账号IP，密码，端口号等配置好。\n\n\n## 安装chrome浏览器\n* 这一步比较简单，直接忽略。\n\n\n## 安装SwitchyOmega\n* SwitchyOmega是chrome的一个插件，用作代理。\n* 直接访问[Chrome 网上应用店](https://chrome.google.com/webstore/category/extensions?hl=zh-CN)安装即可。\n\n## 设置SwitchyOmega\n* 新建情景模式，如下图进行设置\n\n```\n代理协议：SOCKS5\n代理服务器：127.0.0.1\n代理端口：1080\n```\n\n![upload successful](/images/pasted-0.png)\n\n* 现在就可以成功地访问google scholar等网站了。\n","source":"_posts/使用shadowsocks访问google-scholar.md","raw":"title: 使用shadowsocksR访问google scholar\ntags:\n  - shadowsocks\n  - 翻墙\n  - 运维\ncategories:\n  - 运维\n  - ''\ncomments: true\nupdated: false\nauthor: 张学志\ndate: 2018-04-13 20:32:00\n---\n> 本文描述了如何在windows下，使用shadowsocks，SwitchyOmega和chrome实现访问google scholar等网站。\n<!-- more -->\n## 获取shadowsocksR账号\n* 获取的方法有以下几种：\n\t* 网上搜索免费账号\n\t* 网上购买shadowsocksR账号\n\t* 网上购买vps，自行搭建shadowsocksR服务器\n\n* 推荐第三种：购买vps，自己搭建。\n\n* VPS推荐，10$左右/年  [alpharacks](https://www.alpharacks.com)\n* [一键安装脚本](https://github.com/iMeiji/shadowsocks_install/wiki/shadowsocksR-%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85)\n* [BBR加速](https://www.dz9.net/blog/4246.html)\n\n\n## 安装shadowsocksR\n* 下载。[下载地址](https://github.com/xuezhisd/ShadowsocksR-4.1.5-win/)\n* 安装。\n* 配置。将上一步得到的账号IP，密码，端口号等配置好。\n\n\n## 安装chrome浏览器\n* 这一步比较简单，直接忽略。\n\n\n## 安装SwitchyOmega\n* SwitchyOmega是chrome的一个插件，用作代理。\n* 直接访问[Chrome 网上应用店](https://chrome.google.com/webstore/category/extensions?hl=zh-CN)安装即可。\n\n## 设置SwitchyOmega\n* 新建情景模式，如下图进行设置\n\n```\n代理协议：SOCKS5\n代理服务器：127.0.0.1\n代理端口：1080\n```\n\n![upload successful](/images/pasted-0.png)\n\n* 现在就可以成功地访问google scholar等网站了。\n","slug":"使用shadowsocks访问google-scholar","published":1,"layout":"post","photos":[],"link":"","_id":"cjlsnrrnt000ily0lrzgnobvc","content":"<blockquote>\n<p>本文描述了如何在windows下，使用shadowsocks，SwitchyOmega和chrome实现访问google scholar等网站。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"获取shadowsocksR账号\"><a href=\"#获取shadowsocksR账号\" class=\"headerlink\" title=\"获取shadowsocksR账号\"></a>获取shadowsocksR账号</h2><ul>\n<li><p>获取的方法有以下几种：</p>\n<ul>\n<li>网上搜索免费账号</li>\n<li>网上购买shadowsocksR账号</li>\n<li>网上购买vps，自行搭建shadowsocksR服务器</li>\n</ul>\n</li>\n<li><p>推荐第三种：购买vps，自己搭建。</p>\n</li>\n<li><p>VPS推荐，10$左右/年  <a href=\"https://www.alpharacks.com\" target=\"_blank\" rel=\"noopener\">alpharacks</a></p>\n</li>\n<li><a href=\"https://github.com/iMeiji/shadowsocks_install/wiki/shadowsocksR-%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85\" target=\"_blank\" rel=\"noopener\">一键安装脚本</a></li>\n<li><a href=\"https://www.dz9.net/blog/4246.html\" target=\"_blank\" rel=\"noopener\">BBR加速</a></li>\n</ul>\n<h2 id=\"安装shadowsocksR\"><a href=\"#安装shadowsocksR\" class=\"headerlink\" title=\"安装shadowsocksR\"></a>安装shadowsocksR</h2><ul>\n<li>下载。<a href=\"https://github.com/xuezhisd/ShadowsocksR-4.1.5-win/\" target=\"_blank\" rel=\"noopener\">下载地址</a></li>\n<li>安装。</li>\n<li>配置。将上一步得到的账号IP，密码，端口号等配置好。</li>\n</ul>\n<h2 id=\"安装chrome浏览器\"><a href=\"#安装chrome浏览器\" class=\"headerlink\" title=\"安装chrome浏览器\"></a>安装chrome浏览器</h2><ul>\n<li>这一步比较简单，直接忽略。</li>\n</ul>\n<h2 id=\"安装SwitchyOmega\"><a href=\"#安装SwitchyOmega\" class=\"headerlink\" title=\"安装SwitchyOmega\"></a>安装SwitchyOmega</h2><ul>\n<li>SwitchyOmega是chrome的一个插件，用作代理。</li>\n<li>直接访问<a href=\"https://chrome.google.com/webstore/category/extensions?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">Chrome 网上应用店</a>安装即可。</li>\n</ul>\n<h2 id=\"设置SwitchyOmega\"><a href=\"#设置SwitchyOmega\" class=\"headerlink\" title=\"设置SwitchyOmega\"></a>设置SwitchyOmega</h2><ul>\n<li>新建情景模式，如下图进行设置</li>\n</ul>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代理协议：SOCKS5</span><br><span class=\"line\">代理服务器：<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">代理端口：<span class=\"number\">1080</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/pasted-0.png\" alt=\"upload successful\"></p>\n<ul>\n<li>现在就可以成功地访问google scholar等网站了。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文描述了如何在windows下，使用shadowsocks，SwitchyOmega和chrome实现访问google scholar等网站。<br>","more":"</p>\n</blockquote>\n<h2 id=\"获取shadowsocksR账号\"><a href=\"#获取shadowsocksR账号\" class=\"headerlink\" title=\"获取shadowsocksR账号\"></a>获取shadowsocksR账号</h2><ul>\n<li><p>获取的方法有以下几种：</p>\n<ul>\n<li>网上搜索免费账号</li>\n<li>网上购买shadowsocksR账号</li>\n<li>网上购买vps，自行搭建shadowsocksR服务器</li>\n</ul>\n</li>\n<li><p>推荐第三种：购买vps，自己搭建。</p>\n</li>\n<li><p>VPS推荐，10$左右/年  <a href=\"https://www.alpharacks.com\" target=\"_blank\" rel=\"noopener\">alpharacks</a></p>\n</li>\n<li><a href=\"https://github.com/iMeiji/shadowsocks_install/wiki/shadowsocksR-%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85\" target=\"_blank\" rel=\"noopener\">一键安装脚本</a></li>\n<li><a href=\"https://www.dz9.net/blog/4246.html\" target=\"_blank\" rel=\"noopener\">BBR加速</a></li>\n</ul>\n<h2 id=\"安装shadowsocksR\"><a href=\"#安装shadowsocksR\" class=\"headerlink\" title=\"安装shadowsocksR\"></a>安装shadowsocksR</h2><ul>\n<li>下载。<a href=\"https://github.com/xuezhisd/ShadowsocksR-4.1.5-win/\" target=\"_blank\" rel=\"noopener\">下载地址</a></li>\n<li>安装。</li>\n<li>配置。将上一步得到的账号IP，密码，端口号等配置好。</li>\n</ul>\n<h2 id=\"安装chrome浏览器\"><a href=\"#安装chrome浏览器\" class=\"headerlink\" title=\"安装chrome浏览器\"></a>安装chrome浏览器</h2><ul>\n<li>这一步比较简单，直接忽略。</li>\n</ul>\n<h2 id=\"安装SwitchyOmega\"><a href=\"#安装SwitchyOmega\" class=\"headerlink\" title=\"安装SwitchyOmega\"></a>安装SwitchyOmega</h2><ul>\n<li>SwitchyOmega是chrome的一个插件，用作代理。</li>\n<li>直接访问<a href=\"https://chrome.google.com/webstore/category/extensions?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">Chrome 网上应用店</a>安装即可。</li>\n</ul>\n<h2 id=\"设置SwitchyOmega\"><a href=\"#设置SwitchyOmega\" class=\"headerlink\" title=\"设置SwitchyOmega\"></a>设置SwitchyOmega</h2><ul>\n<li>新建情景模式，如下图进行设置</li>\n</ul>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代理协议：SOCKS5</span><br><span class=\"line\">代理服务器：<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">代理端口：<span class=\"number\">1080</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/pasted-0.png\" alt=\"upload successful\"></p>\n<ul>\n<li>现在就可以成功地访问google scholar等网站了。</li>\n</ul>"},{"title":"软件-Clion关联(高亮)cuda代码","comments":1,"updated":"2018-09-07T23:54:36.646Z","author":"张学志","date":"2018-04-16T03:41:00.000Z","_content":"> 本文描述了如何在Clion中高亮cuda代码。\n<!-- more -->\n\n## 操作步骤\n\n* 依次点击：File -> Setting -> Editor -> File Types，打开File Types对话框。\n\n* 在上栏`Recognized File Types`单击`C/C++`。在下栏中点击`+`，将`*.cu`添加到规则中。\n\n* 点击`Apply`和`OK`，使得配置生效。\n\n* 现在cuda代码已经高亮了。\n \n## 参考\n* [Enable code indexing of Cuda in Clion\n](https://stackoverflow.com/questions/39980645/enable-code-indexing-of-cuda-in-clion)\n* [Register New File Type Association Dialog](http://www.jetbrains.com/help/clion/register-new-file-type-association-dialog.html)\n* [Creating a file type](http://www.jetbrains.com/help/clion/creating-and-registering-file-types.html)\n\n","source":"_posts/软件-Clion关联-高亮-cuda代码.md","raw":"title: 软件-Clion关联(高亮)cuda代码\ntags:\n  - 软件\n  - Clion\n  - ''\ncategories:\n  - 软件\n  - ''\ncomments: true\nupdated: false\nauthor: 张学志\ndate: 2018-04-16 11:41:00\n---\n> 本文描述了如何在Clion中高亮cuda代码。\n<!-- more -->\n\n## 操作步骤\n\n* 依次点击：File -> Setting -> Editor -> File Types，打开File Types对话框。\n\n* 在上栏`Recognized File Types`单击`C/C++`。在下栏中点击`+`，将`*.cu`添加到规则中。\n\n* 点击`Apply`和`OK`，使得配置生效。\n\n* 现在cuda代码已经高亮了。\n \n## 参考\n* [Enable code indexing of Cuda in Clion\n](https://stackoverflow.com/questions/39980645/enable-code-indexing-of-cuda-in-clion)\n* [Register New File Type Association Dialog](http://www.jetbrains.com/help/clion/register-new-file-type-association-dialog.html)\n* [Creating a file type](http://www.jetbrains.com/help/clion/creating-and-registering-file-types.html)\n\n","slug":"软件-Clion关联-高亮-cuda代码","published":1,"layout":"post","photos":[],"link":"","_id":"cjlsnrro1000kly0lu109d0nn","content":"<blockquote>\n<p>本文描述了如何在Clion中高亮cuda代码。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h2><ul>\n<li><p>依次点击：File -&gt; Setting -&gt; Editor -&gt; File Types，打开File Types对话框。</p>\n</li>\n<li><p>在上栏<code>Recognized File Types</code>单击<code>C/C++</code>。在下栏中点击<code>+</code>，将<code>*.cu</code>添加到规则中。</p>\n</li>\n<li><p>点击<code>Apply</code>和<code>OK</code>，使得配置生效。</p>\n</li>\n<li><p>现在cuda代码已经高亮了。</p>\n</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://stackoverflow.com/questions/39980645/enable-code-indexing-of-cuda-in-clion\" target=\"_blank\" rel=\"noopener\">Enable code indexing of Cuda in Clion\n</a></li>\n<li><a href=\"http://www.jetbrains.com/help/clion/register-new-file-type-association-dialog.html\" target=\"_blank\" rel=\"noopener\">Register New File Type Association Dialog</a></li>\n<li><a href=\"http://www.jetbrains.com/help/clion/creating-and-registering-file-types.html\" target=\"_blank\" rel=\"noopener\">Creating a file type</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文描述了如何在Clion中高亮cuda代码。<br>","more":"</p>\n</blockquote>\n<h2 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h2><ul>\n<li><p>依次点击：File -&gt; Setting -&gt; Editor -&gt; File Types，打开File Types对话框。</p>\n</li>\n<li><p>在上栏<code>Recognized File Types</code>单击<code>C/C++</code>。在下栏中点击<code>+</code>，将<code>*.cu</code>添加到规则中。</p>\n</li>\n<li><p>点击<code>Apply</code>和<code>OK</code>，使得配置生效。</p>\n</li>\n<li><p>现在cuda代码已经高亮了。</p>\n</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://stackoverflow.com/questions/39980645/enable-code-indexing-of-cuda-in-clion\" target=\"_blank\" rel=\"noopener\">Enable code indexing of Cuda in Clion\n</a></li>\n<li><a href=\"http://www.jetbrains.com/help/clion/register-new-file-type-association-dialog.html\" target=\"_blank\" rel=\"noopener\">Register New File Type Association Dialog</a></li>\n<li><a href=\"http://www.jetbrains.com/help/clion/creating-and-registering-file-types.html\" target=\"_blank\" rel=\"noopener\">Creating a file type</a></li>\n</ul>"},{"title":"运维-使用国内免费CDN加速GitHub Pages","comments":1,"updated":"2018-09-07T23:54:36.646Z","author":"张学志","date":"2018-04-15T15:11:00.000Z","_content":"> 本文描述了使用国内免费CDN**【加速乐】**来加速GitHub-Pages。\n<!-- more -->\n\n ## 概述\n \n#### 博客\n* 我的博客使用github pages服务搭建的。国内访问速度比较慢，因此想到CDN加速。\n \n#### CDN\n* CDN很多，但是好的服务要收费的，比如阿里云。\n* 在网上找到一些免费的CDN。[《国内9大免费CDN汇总》](https://blog.csdn.net/qq_25281775/article/details/77479785)\n* 本文是使用了上面链接中的第一个：**加速乐**。\n\n#### 域名\n* 我的域名`xuezhisd.top`是在阿里云（万网）购买的。\n\n\n## 配置加速乐\n\n#### 注册账户\n* 点击[https://www.yunaq.com/](https://www.yunaq.com/)，填写邮箱，手机号，密码等注册。\n* 根据提示，完成邮箱和手机验证。\n\n#### 添加域名\n\n* 点击右侧面板的`域名管理`，然后点击`添加域名`，添加需要CDN加速的域名。\n* 有两种接入方式，NS和CNAME。由于CNAME需要备案，本文选择使用NS。\n* 如下图所示，已经添加了`xuezhisd.top`。\n\n![upload successful](/images/pasted-1.png)\n\n* 点击域名`xuezhisd.top`，添加子域名`blog.xuezhisd.top`。如下图所示。\n\n![upload successful](/images/pasted-2.png)\n\n\n#### 切换DNS\n\n* 点击`下一步，DNS切换`，按照提示，到阿里云上修改DNS。\n\n\n* 在阿里云上，点击`DNS修改`，将默认的DNS修改为`ns1.jiasule.net`和`ns2.jiasule.net`。\n\n![upload successful](/images/pasted-3.png)\n\n* 如下图所示，点击`立即接入`，提示**域名切换成功**。【这需要等几分钟】\n![upload successful](/images/pasted-4.png)\n\n\n","source":"_posts/运维-使用国内免费CDN加速GitHub-Pages.md","raw":"title: 运维-使用国内免费CDN加速GitHub Pages\ntags:\n  - 运维\ncategories:\n  - 运维\ncomments: true\nupdated: false\nauthor: 张学志\ndate: 2018-04-15 23:11:00\n---\n> 本文描述了使用国内免费CDN**【加速乐】**来加速GitHub-Pages。\n<!-- more -->\n\n ## 概述\n \n#### 博客\n* 我的博客使用github pages服务搭建的。国内访问速度比较慢，因此想到CDN加速。\n \n#### CDN\n* CDN很多，但是好的服务要收费的，比如阿里云。\n* 在网上找到一些免费的CDN。[《国内9大免费CDN汇总》](https://blog.csdn.net/qq_25281775/article/details/77479785)\n* 本文是使用了上面链接中的第一个：**加速乐**。\n\n#### 域名\n* 我的域名`xuezhisd.top`是在阿里云（万网）购买的。\n\n\n## 配置加速乐\n\n#### 注册账户\n* 点击[https://www.yunaq.com/](https://www.yunaq.com/)，填写邮箱，手机号，密码等注册。\n* 根据提示，完成邮箱和手机验证。\n\n#### 添加域名\n\n* 点击右侧面板的`域名管理`，然后点击`添加域名`，添加需要CDN加速的域名。\n* 有两种接入方式，NS和CNAME。由于CNAME需要备案，本文选择使用NS。\n* 如下图所示，已经添加了`xuezhisd.top`。\n\n![upload successful](/images/pasted-1.png)\n\n* 点击域名`xuezhisd.top`，添加子域名`blog.xuezhisd.top`。如下图所示。\n\n![upload successful](/images/pasted-2.png)\n\n\n#### 切换DNS\n\n* 点击`下一步，DNS切换`，按照提示，到阿里云上修改DNS。\n\n\n* 在阿里云上，点击`DNS修改`，将默认的DNS修改为`ns1.jiasule.net`和`ns2.jiasule.net`。\n\n![upload successful](/images/pasted-3.png)\n\n* 如下图所示，点击`立即接入`，提示**域名切换成功**。【这需要等几分钟】\n![upload successful](/images/pasted-4.png)\n\n\n","slug":"运维-使用国内免费CDN加速GitHub-Pages","published":1,"layout":"post","photos":[],"link":"","_id":"cjlsnrro9000ply0lnxsvnex8","content":"<blockquote>\n<p>本文描述了使用国内免费CDN<strong>【加速乐】</strong>来加速GitHub-Pages。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><h4 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h4><ul>\n<li>我的博客使用github pages服务搭建的。国内访问速度比较慢，因此想到CDN加速。</li>\n</ul>\n<h4 id=\"CDN\"><a href=\"#CDN\" class=\"headerlink\" title=\"CDN\"></a>CDN</h4><ul>\n<li>CDN很多，但是好的服务要收费的，比如阿里云。</li>\n<li>在网上找到一些免费的CDN。<a href=\"https://blog.csdn.net/qq_25281775/article/details/77479785\" target=\"_blank\" rel=\"noopener\">《国内9大免费CDN汇总》</a></li>\n<li>本文是使用了上面链接中的第一个：<strong>加速乐</strong>。</li>\n</ul>\n<h4 id=\"域名\"><a href=\"#域名\" class=\"headerlink\" title=\"域名\"></a>域名</h4><ul>\n<li>我的域名<code>xuezhisd.top</code>是在阿里云（万网）购买的。</li>\n</ul>\n<h2 id=\"配置加速乐\"><a href=\"#配置加速乐\" class=\"headerlink\" title=\"配置加速乐\"></a>配置加速乐</h2><h4 id=\"注册账户\"><a href=\"#注册账户\" class=\"headerlink\" title=\"注册账户\"></a>注册账户</h4><ul>\n<li>点击<a href=\"https://www.yunaq.com/\" target=\"_blank\" rel=\"noopener\">https://www.yunaq.com/</a>，填写邮箱，手机号，密码等注册。</li>\n<li>根据提示，完成邮箱和手机验证。</li>\n</ul>\n<h4 id=\"添加域名\"><a href=\"#添加域名\" class=\"headerlink\" title=\"添加域名\"></a>添加域名</h4><ul>\n<li>点击右侧面板的<code>域名管理</code>，然后点击<code>添加域名</code>，添加需要CDN加速的域名。</li>\n<li>有两种接入方式，NS和CNAME。由于CNAME需要备案，本文选择使用NS。</li>\n<li>如下图所示，已经添加了<code>xuezhisd.top</code>。</li>\n</ul>\n<p><img src=\"/images/pasted-1.png\" alt=\"upload successful\"></p>\n<ul>\n<li>点击域名<code>xuezhisd.top</code>，添加子域名<code>blog.xuezhisd.top</code>。如下图所示。</li>\n</ul>\n<p><img src=\"/images/pasted-2.png\" alt=\"upload successful\"></p>\n<h4 id=\"切换DNS\"><a href=\"#切换DNS\" class=\"headerlink\" title=\"切换DNS\"></a>切换DNS</h4><ul>\n<li>点击<code>下一步，DNS切换</code>，按照提示，到阿里云上修改DNS。</li>\n</ul>\n<ul>\n<li>在阿里云上，点击<code>DNS修改</code>，将默认的DNS修改为<code>ns1.jiasule.net</code>和<code>ns2.jiasule.net</code>。</li>\n</ul>\n<p><img src=\"/images/pasted-3.png\" alt=\"upload successful\"></p>\n<ul>\n<li>如下图所示，点击<code>立即接入</code>，提示<strong>域名切换成功</strong>。【这需要等几分钟】<br><img src=\"/images/pasted-4.png\" alt=\"upload successful\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文描述了使用国内免费CDN<strong>【加速乐】</strong>来加速GitHub-Pages。<br>","more":"</p>\n</blockquote>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><h4 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h4><ul>\n<li>我的博客使用github pages服务搭建的。国内访问速度比较慢，因此想到CDN加速。</li>\n</ul>\n<h4 id=\"CDN\"><a href=\"#CDN\" class=\"headerlink\" title=\"CDN\"></a>CDN</h4><ul>\n<li>CDN很多，但是好的服务要收费的，比如阿里云。</li>\n<li>在网上找到一些免费的CDN。<a href=\"https://blog.csdn.net/qq_25281775/article/details/77479785\" target=\"_blank\" rel=\"noopener\">《国内9大免费CDN汇总》</a></li>\n<li>本文是使用了上面链接中的第一个：<strong>加速乐</strong>。</li>\n</ul>\n<h4 id=\"域名\"><a href=\"#域名\" class=\"headerlink\" title=\"域名\"></a>域名</h4><ul>\n<li>我的域名<code>xuezhisd.top</code>是在阿里云（万网）购买的。</li>\n</ul>\n<h2 id=\"配置加速乐\"><a href=\"#配置加速乐\" class=\"headerlink\" title=\"配置加速乐\"></a>配置加速乐</h2><h4 id=\"注册账户\"><a href=\"#注册账户\" class=\"headerlink\" title=\"注册账户\"></a>注册账户</h4><ul>\n<li>点击<a href=\"https://www.yunaq.com/\" target=\"_blank\" rel=\"noopener\">https://www.yunaq.com/</a>，填写邮箱，手机号，密码等注册。</li>\n<li>根据提示，完成邮箱和手机验证。</li>\n</ul>\n<h4 id=\"添加域名\"><a href=\"#添加域名\" class=\"headerlink\" title=\"添加域名\"></a>添加域名</h4><ul>\n<li>点击右侧面板的<code>域名管理</code>，然后点击<code>添加域名</code>，添加需要CDN加速的域名。</li>\n<li>有两种接入方式，NS和CNAME。由于CNAME需要备案，本文选择使用NS。</li>\n<li>如下图所示，已经添加了<code>xuezhisd.top</code>。</li>\n</ul>\n<p><img src=\"/images/pasted-1.png\" alt=\"upload successful\"></p>\n<ul>\n<li>点击域名<code>xuezhisd.top</code>，添加子域名<code>blog.xuezhisd.top</code>。如下图所示。</li>\n</ul>\n<p><img src=\"/images/pasted-2.png\" alt=\"upload successful\"></p>\n<h4 id=\"切换DNS\"><a href=\"#切换DNS\" class=\"headerlink\" title=\"切换DNS\"></a>切换DNS</h4><ul>\n<li>点击<code>下一步，DNS切换</code>，按照提示，到阿里云上修改DNS。</li>\n</ul>\n<ul>\n<li>在阿里云上，点击<code>DNS修改</code>，将默认的DNS修改为<code>ns1.jiasule.net</code>和<code>ns2.jiasule.net</code>。</li>\n</ul>\n<p><img src=\"/images/pasted-3.png\" alt=\"upload successful\"></p>\n<ul>\n<li>如下图所示，点击<code>立即接入</code>，提示<strong>域名切换成功</strong>。【这需要等几分钟】<br><img src=\"/images/pasted-4.png\" alt=\"upload successful\"></li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjlsnrril0000ly0lfty79cr2","category_id":"cjlsnrrk80004ly0l1a2q388k","_id":"cjlsnrrnj000gly0ldv3e5zgm"},{"post_id":"cjlsnrrjf0002ly0lmnlmm9kx","category_id":"cjlsnrrk80004ly0l1a2q388k","_id":"cjlsnrro5000mly0lvd4uyst3"},{"post_id":"cjlsnrrnd000ely0lnrqf7lzn","category_id":"cjlsnrrk80004ly0l1a2q388k","_id":"cjlsnrrou000qly0lppemylre"},{"post_id":"cjlsnrrkl0006ly0lo9u0twnk","category_id":"cjlsnrrk80004ly0l1a2q388k","_id":"cjlsnrrox000sly0lx7ozshmo"},{"post_id":"cjlsnrrl50008ly0ly2yjioyh","category_id":"cjlsnrro5000lly0laa05xav7","_id":"cjlsnrrp6000zly0ltbkdo03d"},{"post_id":"cjlsnrrlw000aly0lnofdkw3p","category_id":"cjlsnrro5000lly0laa05xav7","_id":"cjlsnrrpd0012ly0l54oui7k6"},{"post_id":"cjlsnrrmq000dly0lpm1e4nrc","category_id":"cjlsnrro5000lly0laa05xav7","_id":"cjlsnrrph0016ly0lbkzlkht3"},{"post_id":"cjlsnrrnt000ily0lrzgnobvc","category_id":"cjlsnrrpb0011ly0lbzz5lsm0","_id":"cjlsnrrps0019ly0lrwx0ky46"},{"post_id":"cjlsnrro1000kly0lu109d0nn","category_id":"cjlsnrrph0017ly0lg0mdt4fl","_id":"cjlsnrrq0001fly0l5y7e89mc"},{"post_id":"cjlsnrro9000ply0lnxsvnex8","category_id":"cjlsnrrpb0011ly0lbzz5lsm0","_id":"cjlsnrrq3001hly0ltzkvkwm9"}],"PostTag":[{"post_id":"cjlsnrril0000ly0lfty79cr2","tag_id":"cjlsnrrki0005ly0lw7z9ok7c","_id":"cjlsnrrnz000jly0lxpdrzrb9"},{"post_id":"cjlsnrril0000ly0lfty79cr2","tag_id":"cjlsnrrma000cly0lyhs2fsxe","_id":"cjlsnrro5000nly0lq06zmvqa"},{"post_id":"cjlsnrrnd000ely0lnrqf7lzn","tag_id":"cjlsnrrki0005ly0lw7z9ok7c","_id":"cjlsnrrov000rly0lglsfa1ul"},{"post_id":"cjlsnrrnd000ely0lnrqf7lzn","tag_id":"cjlsnrrma000cly0lyhs2fsxe","_id":"cjlsnrrox000tly0l714ixxp9"},{"post_id":"cjlsnrrjf0002ly0lmnlmm9kx","tag_id":"cjlsnrrki0005ly0lw7z9ok7c","_id":"cjlsnrrp3000wly0l7hohr490"},{"post_id":"cjlsnrrjf0002ly0lmnlmm9kx","tag_id":"cjlsnrrma000cly0lyhs2fsxe","_id":"cjlsnrrp5000xly0lmqy1ril2"},{"post_id":"cjlsnrrkl0006ly0lo9u0twnk","tag_id":"cjlsnrrki0005ly0lw7z9ok7c","_id":"cjlsnrrpf0014ly0lrxltdg67"},{"post_id":"cjlsnrrkl0006ly0lo9u0twnk","tag_id":"cjlsnrrma000cly0lyhs2fsxe","_id":"cjlsnrrpg0015ly0lffmyqfzx"},{"post_id":"cjlsnrrl50008ly0ly2yjioyh","tag_id":"cjlsnrrpd0013ly0ld4dtyfy0","_id":"cjlsnrrpv001cly0l8dtrfmnt"},{"post_id":"cjlsnrrl50008ly0ly2yjioyh","tag_id":"cjlsnrrma000cly0lyhs2fsxe","_id":"cjlsnrrpx001dly0l313v9ar3"},{"post_id":"cjlsnrrlw000aly0lnofdkw3p","tag_id":"cjlsnrrpd0013ly0ld4dtyfy0","_id":"cjlsnrrq4001ily0lhpoo8wmx"},{"post_id":"cjlsnrrlw000aly0lnofdkw3p","tag_id":"cjlsnrrma000cly0lyhs2fsxe","_id":"cjlsnrrq5001jly0lq9kd7bnz"},{"post_id":"cjlsnrrmq000dly0lpm1e4nrc","tag_id":"cjlsnrrpd0013ly0ld4dtyfy0","_id":"cjlsnrrq7001lly0lcscdrsc4"},{"post_id":"cjlsnrrnt000ily0lrzgnobvc","tag_id":"cjlsnrrq5001kly0lx8isin4h","_id":"cjlsnrrqe001ply0lzfa8etbz"},{"post_id":"cjlsnrrnt000ily0lrzgnobvc","tag_id":"cjlsnrrq9001mly0luxzubcp3","_id":"cjlsnrrqg001qly0lusbtyfm9"},{"post_id":"cjlsnrrnt000ily0lrzgnobvc","tag_id":"cjlsnrrqa001nly0l3s0hjq94","_id":"cjlsnrrqj001sly0llypb21g8"},{"post_id":"cjlsnrro1000kly0lu109d0nn","tag_id":"cjlsnrrqc001oly0l47aa2y4g","_id":"cjlsnrrqn001uly0lcfg31hsw"},{"post_id":"cjlsnrro1000kly0lu109d0nn","tag_id":"cjlsnrrqh001rly0lgq5egbzf","_id":"cjlsnrrqo001vly0l2g8jmrpc"},{"post_id":"cjlsnrro9000ply0lnxsvnex8","tag_id":"cjlsnrrqa001nly0l3s0hjq94","_id":"cjlsnrrqp001wly0lsylnbx71"}],"Tag":[{"name":"c++","_id":"cjlsnrrki0005ly0lw7z9ok7c"},{"name":"编程","_id":"cjlsnrrma000cly0lyhs2fsxe"},{"name":"python","_id":"cjlsnrrpd0013ly0ld4dtyfy0"},{"name":"shadowsocks","_id":"cjlsnrrq5001kly0lx8isin4h"},{"name":"翻墙","_id":"cjlsnrrq9001mly0luxzubcp3"},{"name":"运维","_id":"cjlsnrrqa001nly0l3s0hjq94"},{"name":"软件","_id":"cjlsnrrqc001oly0l47aa2y4g"},{"name":"Clion","_id":"cjlsnrrqh001rly0lgq5egbzf"}]}}